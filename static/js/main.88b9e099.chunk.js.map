{"version":3,"sources":["components/lineItem.js","components/Card.js","components/TextInput.js","components/DropDownMenuItem.js","components/DropDownMenuSelect.js","components/DropDownMenu.js","components/SpendingForm.js","algo.js","components/WeeklySpendItem.js","components/WeeklySpend.js","components/PointSummary.js","components/Points.js","components/Bar.js","components/RewardsSummary.js","functions.js","App.js","index.js"],"names":["LineItem","props","icon","category","val","className","src","alt","Card","card","selectedVals","categoryToIcon","filter","obj","cardName","length","image","cardDetails","signupBonus","type","amount","annualFee","cashBackCategories","map","index","points","TextInput","handleInputChange","inputValues","img","placeholder","onChange","e","Number","isInteger","target","value","DropDownMenuItem","name","handleClose","onClick","stopPropagation","DropDownMenuSelect","handleClick","DropDownMenu","setDD","ddselected","cards","signupCards","setSignupCards","options","setOptions","error","setError","ref1","open","setOpen","sort","newOptions","option","errors","dropDown","newest","selected","newSignupCards","prev","ref","SpendingForm","categories","onSubmit","pointsValue","setPointsValue","handlePointsChange","pointType","require","addCard","arr","spend","valueBack","rewardType","push","pointsCollected","cashBack","getSpendForTime","weeklySpend","months","now","Date","then","addMonths","weeks","setDate","getDate","getMatrix","original","width","height","Array","i","j","getFiltered","pointValue","result","reduce","acc","cur","categoryDetails","item","details","limit","period","timeUntil","a","b","date","d","newDate","setMonth","getMonth","optimizer","signUpCards","signUpCardsData","startDate","curDate","filtered","highestCardIndex","highestCard","_highestCard","_highestCardIndex","_limit","inEdgeCase","toLocaleDateString","Object","keys","includes","temp","tempCard","newestDate","optimizeCards","res","getIndividualCashBackData","data","values","gotCashBack","getSpendingForSignUpBonus","bonusHit","weekSpend","forEach","categorySpend","cardSpend","hasOwnProperty","cardSpendData","undefined","bonus","totalValue","accumulator","valid","g","c","groups","time","allCards","matrix","totalSpend","numCards","Math","ceil","neededSpend","max","chosen","weight","knapsackFullOfCards","ans","deadline","spendIndex","finalResult","key","WeeklySpendItem","toString","replace","WeeklySpend","useState","getTotalSpent","_acc","_cur","weeklyLineItem","PointSummary","setSubmitted","weeklyData","Points","formatValue","toFixed","weekly","_weekly","getTotalPoints","duration","Bar","bgcolor","completed","fillerStyles","display","justifyContent","alignItems","backgroundColor","borderRadius","textAlign","style","RewardsSummary","handleChange","setWeeklyData","before","totalCashBack","totalAnnualFee","netValue","totalBonuses","getTotals","b2","console","log","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","notChosen","f","b1","c1","e1","e2","spendingData","cardInfo","addedValueYearOne","addedValueYearTwo","format","curCard","content","title","LocalStorageHook","initialVal","JSON","parse","localStorage","getItem","setData","useEffect","setItem","stringify","App","names","dining","travel","groceries","other","gas","flex","drugstore","streaming","transit","convertToInt","setddSelected","setCards","setInputValues","submitted","chaseUltimateRewards","membershipRewards","setErrors","useRef","ref2","current","event","childNodes","checkForChildNodes","window","addEventListener","removeEventListener","seenError","isNaN","setExistingErrors","v","signupBonusData","withSignupBonusData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88b9e099.chunk.js","sourcesContent":["import React from 'react';\n\nconst LineItem = (props) => {\n  const { icon, category, val } = props;\n  return (\n    <div className=\"flex items-center space-x-4 w-full\">\n      <img className=\"w-4 h-4\" src={`${icon}`} alt=\"\"></img>\n      <div className=\"flex justify-between items-center w-full space-x-6\">\n        <p className=\"flex items-center text-sm\">{category}</p>\n        <div className=\"font-bold text-lg text-blue-500\">{val}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default LineItem;","import React, { useState } from 'react';\nimport LineItem from './lineItem';\n\nconst Card = ({ card, selectedVals, categoryToIcon }) => {\n\n  return (\n      <div className={`bg-white rounded-xl p-6 m-4 space-y-3 shadow-lg ${selectedVals.filter(obj => obj === card.cardName).length != 0 ? 'border-2 border-green-400' : 'border-2 border-white'}`}>\n        <div className=\"relative flex justify-center border-b-2 border-gray-300 w-full text-center mb-4\">\n          <p className=\"font-sansserif text-lg font-semibold text-black\">{card.cardName}</p>\n        </div>\n        <div className=\"flex items-start h-48 space-x-8\">\n          <div className=\"flex flex-none flex-col h-full justify-around\">\n            <img className=\"w-52 h-32 mb-4\" src={card.image} alt=\"\"></img>\n            <p className=\"flex items-center text-sm text-gray-400\">Welcome Bonus<span className=\"ml-1 text-md font-md ml-1 text-black\">{`${card.cardDetails.signupBonus.type == 'points' ? `${card.cardDetails.signupBonus.amount} points` : `$${card.cardDetails.signupBonus.amount}`}`}</span></p>\n            <h1 className=\"flex items-center text-sm text-gray-400\">Anual Fee <span className=\"ml-1 text-md font-md ml-1 text-black\">{`$${card.cardDetails.annualFee}`}</span></h1>\n          </div>\n          <div className=\"bg-gray-100 w-44 py-3 px-4 rounded-md h-full overflow-y-scroll\">\n            <p className=\"border-b-2 border-gray-300 text-center text-black-100 text-sm font-bold mb-2\">Bonus Categories</p>\n            {\n              card.cardDetails.cashBackCategories.map((category, index) => {\n                return <LineItem icon={categoryToIcon[category.category]} category={category.category} val={`${category.points}X`} key={index}/>\n              })\n            }\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Card;","import React from 'react'\n\nexport default function TextInput({ category, handleInputChange, inputValues, img }) {\n\n  const onChange = (e) => {\n    if (Number.isInteger(+e.target.value)) {\n      handleInputChange(+e.target.value, category)\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col mt-8 space-y-1\">\n      <div className=\"flex justify-between\">\n        <div className=\"capitalize text-sm text-gray-400\">{category}</div>\n        <div className=\"capitalize text-sm text-gray-400\">Weekly Spend</div>\n      </div>\n      <div className=\"flex items-center h-9\">\n        <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center border-l border-t border-b border-gray-200 rounded-l-md\"><img className='p-3' src={img}></img></div>\n        <input className=\"font-extraslim px-2 py-1 border h-full flex focus:outline-none focus:border-blue-200 text-sm\" type=\"text\" placeholder=\"Amount\" onChange={onChange} value={inputValues[category]}/>\n        <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center bg-gray-100 border-r border-t border-b border-gray-200 rounded-r-md\">.00</div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function DropDownMenuItem({ name, handleClose }) {\n  return (\n    <div className=\"flex border rounded-xl px-2 text-sm bg-gray-200 mt-1 ml-1 items-center space-x-2 relative\">\n      <div className=\"\">\n        {name}\n      </div>\n      <button className=\"focus:outline-none hover:bg-red-300 border rounded-sm\" onClick={(e) => {\n          e.stopPropagation();\n          handleClose(name)\n        }\n      }>\n        <img src=\"x.svg\" className=\"h-4 w-4\"></img>\n      </button>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function DropDownMenuSelect({ name, handleClick }) {\n  return (\n      <div className=\"w-full rounded-xl p-2 hover:bg-blue-100\" onClick={(e) => {\n        e.stopPropagation()\n        handleClick(name)\n      }}>\n        {name}\n      </div>\n  )\n}","import React, { useState } from 'react'\nimport DropDownMenuItem from './DropDownMenuItem'\nimport DropDownMenuSelect from './DropDownMenuSelect'\n\nfunction DropDownMenu({ setDD, ddselected, cards, signupCards, setSignupCards, options, setOptions, error, setError, ref1, open, setOpen }) {\n\n  const names = cards.map(card => card.cardName)\n  options = options.sort()\n\n  const handleClick = (name) => {\n    const newOptions = options.filter(option => option != name);\n    setOptions(newOptions);\n    setDD([...ddselected, name])\n    setError(errors => {\n      return {...errors, dropDown: false}\n    })\n  }\n\n  const handleClose = (name) => {\n    const newest = ddselected.filter(selected => selected != name);\n    const newSignupCards = signupCards.filter(card => card.cardName != name);\n    setSignupCards(newSignupCards)\n    setDD(newest);\n    setOptions([name, ...options]);\n  }\n\n  return (\n    <>\n      <div className={`width-full border rounded-xl p-2 flex justify-center items-center ${(open && !error['dropDown']) && 'border-blue-300'} ${error['dropDown'] && 'border-red-400'}`} onClick={() => {setOpen(prev => !prev)}} ref={ref1}>\n        <div className=\"flex flex-wrap w-full border-r-2\" >\n          { ddselected.length == 0 ? (error['dropDown'] ? <div className=\"text-red-300\">Please select at least one card ...</div> : <div className=\"text-gray-400\">Select ...</div>)\n          : ddselected.map((selected, index) => {\n              return <DropDownMenuItem name={selected} handleClose={handleClose} key={index}/>\n            })\n          }\n        </div>\n        <img src=\"arrow-right.svg\" className=\"h-6 w-6 p-1 transform rotate-90 ml-2\"></img>\n      </div>\n        {open && (\n            <div className=\"border mt-2 rounded-xl\">\n              {\n                options.map((option, index) => {\n                  return <DropDownMenuSelect name={option} handleClick={handleClick} key={index}/>\n                })\n              }\n            </div>\n          )\n        }\n    </>\n  )\n}\n\n\n\nexport default DropDownMenu\n","import React, {useState} from 'react'\nimport TextInput from './TextInput'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport DropDownMenu from './DropDownMenu'\n\nexport default function SpendingForm({ handleInputChange, inputValues, categories, onSubmit, setDD, ddselected, cards, signupCards, setSignupCards, options, setOptions, error, setError, pointsValue, setPointsValue, ref1, open, setOpen }) {\n\n  const handleSubmit = (e) => {\n    onSubmit();\n  }\n\n  const handlePointsChange = (pointType, val) => {\n    setError(error => {\n      return {...error, [pointType]: false}\n    })\n    setPointsValue(prev => {\n        return {...prev, [pointType]: val}\n    })\n  }\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex font-light text-xl border-b-2 bg-white mb-8\">\n          Select the cards that you currently own\n      </div>\n      <DropDownMenu \n        ref1={ref1}\n        setDD={setDD} \n        ddselected={ddselected} \n        cards={cards} signupCards={signupCards} \n        setSignupCards={setSignupCards}\n        options={options}\n        setOptions={setOptions}\n        error={error}\n        setError={setError}\n        open={open}\n        setOpen={setOpen}\n      />\n      <div className=\"flex justify-between border-b-2 mt-8 items-center\">\n        <div className=\"flex font-light text-xl\">\n            Spending Categories\n        </div>\n        <div className=\"flex font-light text-sm text-gray-400\">\n          How much do you spend each Week?\n        </div>\n      </div>\n      <div className=\"flex flex-row items-center flex-wrap justify-between\">\n        {\n          categories.map((category, index) => {\n            return <TextInput category={category} handleInputChange={handleInputChange} inputValues={inputValues} img='dollar-symbol.svg' key={index}/>\n          })\n        }\n      </div>\n      <div className=\"flex justify-between border-b-2 mt-8 items-center\">\n        <div className=\"flex font-light text-xl\">\n            Reward Point Value\n        </div>\n        <div className=\"flex font-light text-sm text-gray-400\">\n          How many cents do you thing each point is worth?\n        </div>\n      </div>\n\n      <div className='flex justify-between'>\n  \n        <div className=\"flex flex-col mt-8 space-y-1\">\n          <div className=\"flex justify-between\">\n            <div className=\"capitalize text-sm text-gray-400\">ChaseUltimateRewards</div>\n            <div className=\"capitalize text-sm text-gray-400\">value</div>\n          </div>\n          <div className='flex flex-col space-y-2'>\n            <div className=\"flex items-center h-9\">\n              <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center border-l border-t border-b border-gray-200 rounded-l-md\"><img className='p-3' src='cash.svg'></img></div>\n              <input className={`font-extraslim px-2 py-1 border h-full flex focus:outline-none focus:border-blue-200 text-sm ${error['chaseUltimateRewards'] && 'border-red-300 focus:border-red-300'}`} type=\"text\" placeholder='amount' onChange={(e) => handlePointsChange('chaseUltimateRewards', e.target.value)} value={pointsValue['chaseUltimateRewards']}/>\n              <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center bg-gray-100 border-r border-t border-b border-gray-200 rounded-r-md\">.00</div>\n            </div>\n            {error['chaseUltimateRewards'] && <div className='text-sm font-extralight text-red-300'>Please input a valid number</div>}\n          </div>\n        </div>\n        <div className=\"flex flex-col mt-8 space-y-1\">\n          <div className=\"flex justify-between\">\n            <div className=\"capitalize text-sm text-gray-400\">MembershipRewards</div>\n            <div className=\"capitalize text-sm text-gray-400\">value</div>\n          </div>\n          <div className='flex flex-col space-y-2'>\n            <div className=\"flex items-center h-9\">\n              <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center border-l border-t border-b border-gray-200 rounded-l-md\"><img className='p-3' src='cash.svg'></img></div>\n              <input className={`font-extraslim px-2 py-1 border h-full flex focus:outline-none focus:border-blue-200 text-sm ${error['membershipRewards'] && 'border-red-300 focus:border-red-300'}`} type=\"text\" placeholder='amount' onChange={(e) => handlePointsChange('membershipRewards', e.target.value)} value={pointsValue['membershipRewards']}/>\n              <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center bg-gray-100 border-r border-t border-b border-gray-200 rounded-r-md\">.00</div>\n            </div>\n            {error['membershipRewards'] && <div className='text-sm font-extralight text-red-300'>Please input a valid number</div>}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <button className=\"bg-gray-100 rounded-full focus:outline-none border focus:border-red-300 hover:bg-green-300 mt-8\" onClick={handleSubmit}>\n          <img src=\"arrow-right.svg\" className=\"h-10 w-10 p-1\"></img>\n        </button>\n      </div>\n    </div>\n  )\n}\n","const values = {\n  \"chaseUltimateRewards\": 0.015,\n  \"membershipRewards\": 0.0125\n}\n\nconst cards = require('./credit.json');\n// const signUpCards = require ('./practice.json');\n\nconst addCard = (arr, cardName, spend, points, valueBack, rewardType) => {\n  arr.cards.push(\n    {\n      name: cardName,\n      spend: spend,\n      pointsCollected: spend * points,\n      cashBack: valueBack * spend,\n      pointType: rewardType,\n      valueBack: valueBack\n    }\n  )\n}\n\nconst getSpendForTime = (weeklySpend, months) => {\n  let now = new Date();\n  const then = addMonths(now, months);\n  let weeks = 0;\n  while (now < then) {\n    weeks++;\n    now.setDate(now.getDate() + 7);\n  }\n  return weeklySpend * weeks;\n}\n\nconst getMatrix = (original, width, height) => {\n  const newest = new Array(width+1);\n  for (let i = 0; i < newest.length; i++) {\n    newest[i] = new Array(height+1);\n  }\n  for (let i = 0; i < original.length; i++) {\n    for(let j = 0; j < newest[0].length; j++) {\n      if (j < original[0].length) {\n        newest[i][j] = original[i][j]\n      }\n      else {\n        newest[i][j] = newest[i][j-1]\n      }\n    }\n  }\n  return newest;\n}\n\nconst knapsackFullOfCards = (c, spend, values) => {\n  // seperate the cards with different times to earn signupBonus into differnt groups\n  const groups = c.reduce((acc, cur) => {\n    if (acc.length == 0) {\n      acc.push([cur])\n    }\n    else {\n      let i = 0;\n      for(; i < acc.length; i++) {\n        if (acc[i][0].cardDetails.signupBonus.time == cur.cardDetails.signupBonus.time) {\n          acc[i].push(cur);\n          break;\n        }\n      }\n      if (i == acc.length) {\n        acc.push([cur]);\n      }\n    }\n    return acc;\n\n  }, []);\n\n  groups.sort((a, b) => {\n    return a[0].cardDetails.signupBonus.time - b[0].cardDetails.signupBonus.time;\n  })\n\n  const allCards = groups.reduce((acc, cur) => {\n    cur.forEach(card => {\n      acc.push(card)\n    })\n    return acc;\n  }, [])\n\n  let matrix = [[0]];\n  let totalSpend = 0;\n  let numCards = 0;\n\n  for (let a = 0; a < groups.length; a++) {\n    const cards = groups[a];\n    totalSpend =  Math.ceil(totalSpend + (getSpendForTime(spend, cards[0].cardDetails.signupBonus.time) - totalSpend));\n    matrix = getMatrix(matrix, numCards + cards.length, totalSpend)\n\n    for(let i = numCards+1; i < matrix.length; i++) {\n      for(let j = 0; j < matrix[0].length; j++) {\n        if (i == 0 || j == 0) {\n          matrix[i][j] = 0;\n        }\n        else if (allCards[i-1].cardDetails.signupBonus.neededSpend > j) {\n          matrix[i][j] = matrix[i-1][j];\n        }\n        else {\n          matrix[i][j] = Math.max(matrix[i-1][j], (allCards[i-1].cardDetails.signupBonus.amount * values[allCards[i-1].cardDetails.pointType]) + matrix[i-1][j-allCards[i-1].cardDetails.signupBonus.neededSpend]);\n        }\n      }\n    }\n    numCards += cards.length;\n  }\n\n  let chosen = [];\n  let i = numCards;\n  let j = totalSpend;\n  while (matrix[i][j] == matrix[i][j-1]) {\n    j--;\n  }\n  // console.log(j)\n  while (matrix[i][j] != 0) {\n    const val = (allCards[i-1].cardDetails.signupBonus.amount * values[allCards[i-1].cardDetails.pointType]);\n    const weight = allCards[i-1].cardDetails.signupBonus.neededSpend;\n    if (j-weight >= 0 && matrix[i-1][j-weight] == matrix[i][j] - val) {\n      chosen.push(allCards[i-1]);\n      i--;\n      j -= weight;\n    }\n    else {\n      i--;\n    }\n  }\n  return chosen\n}\n\nconst getFiltered = (cards, category, pointValue) => {\n  const result = cards.reduce((acc, cur) => {\n    const obj = {};\n    obj.name = cur.cardName;\n    obj.pointType = cur.cardDetails.pointType;\n    const categoryDetails = cur.cardDetails.cashBackCategories.filter(item => item.category == category);\n    const details = categoryDetails.length > 0 ? categoryDetails[0] : cur.cardDetails.cashBackCategories.filter(item => item.category == 'other')[0]\n    obj.details = {\n      category: details.category,\n      limit: details.limit,\n      period: details.period,\n      points: details.points,\n      timeUntil: details.timeUntil\n    }\n    obj.valueBack = obj.details.points * pointValue[obj.pointType];\n    acc.push(obj);\n    return acc;\n  }, [])\n\n  result.sort((a, b) => b.valueBack - a.valueBack);\n  return result;\n}\n\nconst addMonths = (date, months) => {\n  var d = date.getDate();\n  let newDate = new Date(date)\n  newDate.setMonth(newDate.getMonth() + +months);\n  if (newDate.getDate() != d) {\n    newDate.setDate(0);\n  }\n  return newDate;\n}\n\nexport function optimizer(cards, category, spend, pointValue, signUpCards, signUpCardsData) {\n  const startDate = new Date();\n  let curDate = new Date();\n  const result = [];\n\n  let filtered = getFiltered(cards, category, pointValue)\n\n  let highestCardIndex = 0;\n  let highestCard = filtered[highestCardIndex];\n  let _highestCard = highestCard;\n  let _highestCardIndex = highestCardIndex;\n  let _limit = 0;\n  let inEdgeCase = false;\n  let period = 0;\n  \n  for (let i = 0; i < 52; i++) {\n    let weeklySpend = spend;\n    const newest = {}\n    newest.date = curDate.toLocaleDateString();\n    newest.category = category;\n    newest.cards = [];\n    while (weeklySpend > 0) {\n      if (signUpCards.length > 0) {\n        if (Object.keys(signUpCardsData.result).includes(curDate.toLocaleDateString())) {\n          if (Object.keys(signUpCardsData.result[curDate.toLocaleDateString()]).includes(category)) {\n            const temp = signUpCardsData.result[curDate.toLocaleDateString()][category];\n            const tempCard = filtered.filter(card => card.name == temp.name)[0];\n            addCard(newest, temp.name, temp.spend, tempCard.details.points, tempCard.valueBack, tempCard.pointType);\n            weeklySpend -= temp.spend;\n            continue;\n          }\n        }\n      }\n      if (highestCardIndex >= filtered.length) {\n        filtered = getFiltered(cards, 'other', pointValue);\n        highestCardIndex = 0;\n        highestCard = filtered[highestCardIndex];\n      }\n      while (highestCard.details.limit == 0) {\n          highestCardIndex++;\n          if (highestCardIndex >= filtered.length) {\n            filtered = getFiltered(cards, 'other', pointValue);\n            highestCardIndex = 0;\n            highestCard = filtered[highestCardIndex];\n          }\n          else {\n            highestCard = filtered[highestCardIndex];\n          }\n      }\n      if (inEdgeCase) {\n        if (period != 0 && period % (_highestCard.details.period * 4) == 0) {\n          highestCard = _highestCard;\n          highestCardIndex = _highestCardIndex;\n          highestCard.details.limit = _limit;\n          period = 0;\n        } \n      }\n      if (highestCard.details.limit == null) {\n        if (highestCard.details.timeUntil == null) {\n          if (highestCard.details.period == null) {\n            addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            weeklySpend -= weeklySpend;\n          }\n        }\n        else {\n          if (typeof highestCard.details.timeUntil == 'number') {\n            if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n              highestCard = filtered[++highestCardIndex];\n            }\n            else {\n              addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n              weeklySpend -= weeklySpend;\n            }\n          }\n          else {\n            const newestDate = new Date(highestCard.details.timeUntil);\n            if (curDate >= newestDate) {\n              highestCard = filtered[++highestCardIndex];\n            }\n            else {\n              addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n              weeklySpend -= weeklySpend;\n            }\n          }\n        }\n      }\n      else {\n        if (highestCard.details.timeUntil == null) {\n          if (highestCard.details.limit >= weeklySpend) {\n            addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            highestCard.details.limit -= weeklySpend;\n            weeklySpend -= weeklySpend;\n          }\n          else {   \n            addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            weeklySpend -= highestCard.details.limit;\n            highestCard.details.limit = 0;\n            highestCard = filtered[++highestCardIndex];\n          }\n        }\n        else {\n          if (highestCard.details.period == null) {\n            if (typeof highestCard.details.timeUntil == 'number') {\n              if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n                highestCard = filtered[++highestCardIndex];\n              }\n              else {\n                if (highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n            else {\n              const newestDate = new Date(highestCard.details.timeUntil);\n              if (curDate >= newestDate) {\n                highestCard = filtered[++highestCardIndex];\n              }\n              else {\n                if (highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n          }\n          else {\n            inEdgeCase = true;\n            _limit = highestCard.details.limit;\n            _highestCard = highestCard;\n            _highestCardIndex = highestCardIndex;\n  \n            if (typeof highestCard.details.timeUntil == 'number') {\n              if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n                highestCard = filtered[++highestCardIndex];\n                inEdgeCase = false;\n              }\n              else {\n                if (period < highestCard.details.period * 4 && highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n            else {\n              const newestDate = new Date(highestCard.details.timeUntil);\n              if (curDate >= newestDate) {\n                highestCard = filtered[++highestCardIndex];\n                inEdgeCase = false\n              }\n              else {\n                if (period < highestCard.details.period * 4 && highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (inEdgeCase) {\n      period++;\n    }\n    result.push(newest);\n    curDate.setDate(curDate.getDate() + 7);\n  }\n  // for (let i = 0; i < result.length; i++) {\n  //   console.log(result[i].date)\n  //   console.log(result[i].cards)\n  // }\n  return result\n}\n\nexport function optimizeCards(categories, cards, spend, pointValue, signUpCards, signUpCardsData=null) {\n\n  const map = categories.map(category => {\n\n    return {\n      category: category,\n      result: optimizer(cards, category, spend[category], pointValue, signUpCards, signUpCardsData)\n    }\n\n  })\n\n  const res = map[0].result.reduce((acc, item) => {\n\n    const obj = {}\n    obj.date = item.date\n    obj.result = []\n    acc.push(obj)\n    return acc;\n\n  }, []) \n\n  for (let i = 0; i < 52; i++) {\n    for (let j = 0; j < categories.length; j++) {\n      res[i].result.push(\n        {\n          category: map[j].result[i].category,\n          cards: map[j].result[i].cards\n        }\n      );\n    }\n  }\n  return res;\n}\n\nexport function getIndividualCashBackData(data, cards, signUpCards, values, weeklySpend) {\n\n  const gotCashBack = getSpendingForSignUpBonus(data, signUpCards, values, weeklySpend).bonusHit\n\n  const result = data.reduce((acc, weekSpend) => {\n    weekSpend.result.forEach(categorySpend => {\n      categorySpend.cards.forEach(cardSpend => {\n        if (acc.hasOwnProperty(cardSpend.name)) {\n          acc[cardSpend.name].spend += cardSpend.spend;\n          acc[cardSpend.name].pointsCollected += cardSpend.pointsCollected;\n          acc[cardSpend.name].cashBack += cardSpend.cashBack;\n        }\n        else {\n          const cardSpendData = {}\n          cardSpendData.spend = cardSpend.spend;\n          cardSpendData.pointsCollected = cardSpend.pointsCollected;\n          cardSpendData.pointType = cardSpend.pointType;\n          cardSpendData.cashBack = cardSpend.cashBack;\n          if (gotCashBack != undefined && gotCashBack.includes(cardSpend.name)) {\n            cardSpendData.bonus = cards.filter(card => card.cardName == cardSpend.name)[0].cardDetails.signupBonus.amount\n          }\n          else {\n            cardSpendData.bonus = 0;\n          }\n          acc[cardSpend.name] = cardSpendData\n        }\n      })\n    })\n    return acc;\n  }, {})\n\n  cards.forEach(card => {\n    if (result.hasOwnProperty(card.cardName)) {\n      result[card.cardName].totalValue = result[card.cardName].cashBack - card.cardDetails.annualFee;\n      if (gotCashBack != undefined && gotCashBack.includes(card.cardName)) {\n        if (card.cardDetails.signupBonus.type != 'points') {\n          result[card.cardName].totalValue += result[card.cardName].bonus\n        }\n        else {\n          result[card.cardName].totalValue += (result[card.cardName].bonus * values[result[card.cardName].pointType])\n        }\n      }\n    }\n    else {\n      const cardSpendData = {};\n      cardSpendData.spend = 0;\n      cardSpendData.pointsCollected = 0;\n      cardSpendData.pointType = null;\n      cardSpendData.cashBack = 0;\n      cardSpendData.bonus = 0;\n      cardSpendData.totalValue = 0 - card.cardDetails.annualFee;\n      result[card.cardName] = cardSpendData;\n    }\n  })\n\n  return result;\n}\n\nexport function getTotals(data, cards, signUpCards, values, weeklySpend) {\n\n  const result = getIndividualCashBackData(data, cards, signUpCards, values, weeklySpend);\n\n  return cards.reduce((acc, card) => {\n    if (Object.keys(acc).length == 0) {\n      acc.totalCashBack = 0;\n      acc.totalAnnualFee = 0;\n      acc.netValue = 0;\n      acc.totalSpend = 0;\n      acc.totalBonuses = 0;\n    }\n\n    acc.totalCashBack += result[card.cardName].cashBack;\n    acc.totalAnnualFee += card.cardDetails.annualFee;\n    acc.netValue += result[card.cardName].totalValue;\n    acc.totalSpend += result[card.cardName].spend;\n    if (signUpCards.map(card => card.cardName).includes(card.cardName)) {\n      acc.totalBonuses += result[card.cardName].bonus;\n    }\n\n    return acc\n  }, {})\n}\n\nconst categories = cards.reduce((accumulator, val) => {\n  const items = val.cardDetails.cashBackCategories.filter(item => !accumulator.includes(item.category));\n  items.forEach(item => {\n    accumulator.push(item.category)\n  });\n  return accumulator;\n},[])\n\nconst spend = {\n  'dining': 50, \n  'travel': 80,\n  'groceries': 150,\n  'other': 10,\n  'drugstore': 10,\n  'streaming': 20,\n  'transit': 45,\n  'gas': 40\n}\n\nexport function getSpendingForSignUpBonus(data, cards, values, weeklySpend) {\n\n  const result = data.reduce((acc, cur) => {\n    cur.result.forEach(result => {\n      result.cards.forEach(card => {\n        if (acc.filter(item => item.valueBack === card.valueBack).length == 0) {\n          const newest = {};\n          newest.valueBack = card.valueBack;\n          newest.result = []\n          acc.push(newest);\n        }\n    \n        acc.filter(item => item.valueBack === card.valueBack)[0].result.push(\n          {\n            date: cur.date,\n            category: result.category,\n            valid: true,\n            spend: card\n          }\n        )\n        \n      })\n    })\n    return acc;\n  }, [])\n  \n  result.sort((a, b) => a.valueBack - b.valueBack)\n\n  const c = knapsackFullOfCards(cards, weeklySpend, values)\n  // console.log(c)\n  const g = c.reduce((acc, cur) => {\n    acc.push(cur.cardName);\n    return acc;\n  }, [])\n\n  const ans = cards.reduce((acc, card) => {\n    acc[card.cardName] = [];\n    return acc;\n  }, {})\n\n  cards.sort((a, b) => {\n    return a.cardDetails.signupBonus.time - b.cardDetails.signupBonus.time;\n  })\n\n  cards.forEach(card => {\n\n    if (g.includes(card.cardName)) {\n      let amount = card.cardDetails.signupBonus.neededSpend;\n      const deadline = addMonths(new Date(), card.cardDetails.signupBonus.time);\n      let index = 0;\n      let spendIndex = 0;\n  \n      while (amount > 0 && spendIndex < result.length) {\n        // console.log(spendIndex)\n        // console.log(index)\n        // console.log(ans)\n        if (index >= result[spendIndex].result.length || new Date(result[spendIndex].result[index].date) >= deadline) {\n          index = 0;\n          spendIndex++;\n        }\n        else {\n          if (result[spendIndex].result[index].valid) {\n            ans[card.cardName].push(\n              {\n                date: result[spendIndex].result[index].date,\n                category: result[spendIndex].result[index].category,\n                spend: result[spendIndex].result[index].spend.spend\n              }\n            )\n            amount -= result[spendIndex].result[index].spend.spend;\n            result[spendIndex].result[index].valid = false;\n          }\n          index++;\n        }\n      }\n    }\n\n    else {\n      ans[card.cardName] = []\n    }\n\n  })\n  // console.log(c)\n\n  const finalResult = Object.keys(ans).reduce((acc, cur) => {\n    if (!acc.hasOwnProperty('bonusHit')) {\n      acc.bonusHit = []\n      acc.result = {}\n    }\n    if (ans[cur].length == 0) {\n      return acc;\n    }\n    else {\n      acc.bonusHit.push(cur);\n      return acc;\n    }\n  }, {})\n\n  Object.keys(ans).forEach(key => {\n    ans[key].forEach(item => {\n      if (!finalResult.result.hasOwnProperty(item.date)) {\n        finalResult.result[item.date] = {};\n      }\n      finalResult.result[item.date][item.category] = \n        {\n          spend: item.spend,\n          name: key,\n        }\n    })\n  })\n  // console.log(finalResult)\n  return finalResult;\n}\n\n// const temp = ['Chase Freedom Unlimited', 'Chase Freedom Flex', 'American Express Gold Card', 'American Express Platinum Card', 'Chase Sapphire Reserve']\n// const signUpCards = cards.filter(card => temp.includes(card.cardName));\n\n// const ans = optimizeCards(categories, cards, spend, values, [], null);\n// ans.forEach(card => {\n//   console.log(card)\n// }) \n\n// const b = getSpendingForSignUpBonus(ans, signUpCards, values, 405);\n// console.log(b.result)\n\n// const c = optimizeCards(categories, cards, spend, values, signUpCards, b)\n// console.log(b)\n// c.forEach(item => {\n//   console.log(item.result[3])\n// })\n// console.log(getIndividualCashBackData(c, cards, signUpCards, values))\n\n// console.log(b)\n// console.log('finished')\n// optimizer(cards, 'groceries', 40000, values, \"M\")\n// console.log(getSpendForTime(250, 3));\n// console.log(b)\n// knapsackFullOfCards(b, 300, values)","import React from 'react';\n\nconst WeeklySpendItem = ({ data }) => {\n\n  return (\n      <div className='flex flex-row w-full px-2 border-b bg-white text-sm items-center'>\n        <div className=\"flex justify-start w-1/4 text-sm font-extralight\">{data.category}</div>\n        <div className=\"flex text-center flex-col w-1/4\">\n          {\n            data.cards.length == 0 ? '-':\n            data.cards.map(card => {\n              return <div className=\"truncate text-sm font-extralight\">{card.name}</div>\n            })\n          }\n        </div>\n        <div className=\"flex flex-col w-1/4\">\n          {\n            data.cards.length == 0 ? <div className='flex justify-center'>-</div>:\n            data.cards.map(card => {\n              return <div className=\"flex items-center justify-start ml-28 truncate font-extralight tracking-widest\"><span className='text-lg font-extralight'>$</span>{card.spend.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\n            })\n          }\n        </div>\n        <div className=\"flex flex-col items-end w-1/4\">\n          {\n            data.cards.length == 0 ? '-':\n            data.cards.map(card => {\n              return <div className=\"flex items-center truncate font-extralight\">{card.pointsCollected}</div>\n            })\n          }\n        </div>\n      </div>\n  );\n}\n\nexport default WeeklySpendItem;\n","import React, { useState } from 'react';\nimport WeeklySpendItem from './WeeklySpendItem';\n\nconst WeeklySpend = ({ data, index }) => {\n  const [open, setOpen] = useState(index == 0 || index == 1 ? true : false)\n  \n  const getTotalSpent = (data, type) => {\n    return data.result.reduce((acc, cur) => {\n      return acc + cur.cards.reduce((_acc, _cur) => {\n        return _acc + _cur[type];\n      }, 0)\n    }, 0)\n  }\n  return (\n      <div className='flex flex-col w-full p-2 border-b-2 bg-white'>\n        <div className=\"flex mb-2 mt-2 items-center\">\n          <div className=\"w-1/4 flex flex-row items-center space-x-2\">\n            <img src={open ? 'minus.svg' : 'expand.svg'} className=\"flex justify-center items-center bg-gray-100 h-4 w-4 border rounded-md focus:outline-none\" onClick={() => {setOpen(prev => !prev)}}></img>\n            <div className=\"flex justify-start text-sm\">{data.date}</div>\n          </div>\n          <div className=\"w-1/4 text-sm flex justify-center\">Card</div>\n          <div className=\"w-1/4 text-sm flex justify-center\">Spend</div>\n          <div className=\"w-1/4 flex justify-end text-sm\">Points Earned</div>\n        </div>\n        <div className={!open ? \"hidden\" : \"block\"}>\n          {\n            data.result.map(weeklyLineItem => {\n              return <WeeklySpendItem data={weeklyLineItem}/>\n            })\n          }\n          <div className=\"flex mt-2\">\n            <div className=\"w-1/4\"></div>\n            <div className=\"w-1/4 flex justify-center text-sm\">totals</div>\n            <div className=\"w-1/4 flex items-center justify-center truncate tracking-widest text-sm\"><span className='text-lg font-light'>$</span>{getTotalSpent(data, 'spend').toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\n            <div className=\"w-1/4 flex items-center justify-end truncate tracking-widest text-sm\">{getTotalSpent(data, 'pointsCollected')}</div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default WeeklySpend;","import React, { useState } from 'react';\nimport WeeklySpend from './WeeklySpend';\n\nconst PointSummary = ( {setSubmitted, weeklyData }) => {\n\n\n  return (\n      <div className='flex flex-col w-full h-screen border-l border-r shadow-xl rounded-lg p-4'>\n        <div className=\"flex justify-center items-center p-4 font-light text-xl border-b-2 bg-white\">\n          Weekly Spending Summary\n        </div>\n        <div className='flex flex-col overflow-y-scroll'>\n          {\n            weeklyData.map((data, index) => {\n              return <WeeklySpend data={data} index={index} key={index}/>\n            })\n          }\n        </div>\n        {/* <button \n          className=\"p-4 bg-green-400\"\n          onClick={() => { setSubmitted(prev => !prev) }}>\n          back\n        </button> */}\n      </div>\n  );\n}\n\nexport default PointSummary;","import React from 'react';\nimport LineItem from './lineItem';\nimport AnimatedNumber from \"animated-number-react\";\n\nconst Points = ({ details, categoryToIcon, data, categories }) => {\n\n  const formatValue = value => `${Number(value).toFixed(0)}`;\n\n  const getTotalPoints = (data, rewardType) => {\n    return data.reduce((acc, weekly) => {\n      weekly.result.forEach(_weekly => {\n        _weekly.cards.forEach(card => {\n          if (rewardType == card.pointType) {\n            if (!acc.hasOwnProperty(_weekly.category)) {\n              acc[_weekly.category] = 0;\n            }\n            acc[_weekly.category] += card.pointsCollected;\n          }\n        })\n      })\n      return acc;\n    }, {})\n  }\n\n  const points = getTotalPoints(data, details.pointType)\n\n  return (\n    <div className=\"w-1/2\">\n      <div className=\"flex flex-col items-center p-4 mx-2 border rounded-md space-y-2 shadow-md\">\n        <div className=\"text-center text-md font-semi border-b-2 border-gray-300 mb-1 w-full py-1 capitalize\">{details.pointType}</div>\n        <div className=\"w-full\">\n          {\n            categories.map((category, index) => {\n              return (\n                <div className=\"flex items-center space-x-4 w-full\">\n                  <img className=\"w-4 h-4\" src={categoryToIcon[category]} alt=\"\"></img>\n                  <div className=\"flex justify-between items-center w-full space-x-6\">\n                    <p className=\"flex items-center text-sm\">{category}</p>\n                    <AnimatedNumber\n                      className=\"text-blue-500 font-light text-lg\"\n                      value={points.hasOwnProperty(category) ? points[category] : 0}\n                      formatValue={formatValue}\n                      duration={1000}\n                      key={index}\n                    />\n                  </div>\n                </div>\n              )\n            })\n          }\n          {/* <LineItem icon=\"plane.svg\" category=\"travel\" val=\"0\"/>\n          <LineItem icon=\"serving-dish.svg\" category=\"restaurant\" val=\"0\"/>\n          <LineItem icon=\"infinity.svg\" category=\"Other\" val=\"0\"/>\n          <LineItem icon=\"shopping-cart.svg\" category=\"Groceries\" val=\"0\"/> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Points;","import React from 'react';\n\nconst Bar = ({ bgcolor, completed }) => {\n  \n  const containerStyles = {\n    height: 14,\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 4,\n  }\n\n  const fillerStyles = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 'inherit',\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: 'inherit',\n    textAlign: 'right'\n  }\n\n  const labelStyles = {\n    fontSize: 10,\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n      </div>\n    </div>\n  )\n}\n\nexport default Bar;","import React, { useEffect } from 'react';\nimport Points from './Points.js';\nimport { getIndividualCashBackData, getTotals, optimizeCards, getSpendingForSignUpBonus } from '../algo.js';\nimport Card from './Card.js';\nimport Bar from './Bar.js'\nimport './a.css'\n\nconst RewardsSummary = ( { setSubmitted, categoryToIcon, data, categories, cards, values, allCards, spend, selectedVals, handleChange, setWeeklyData, signupCards, setSignupCards, options, setOptions }) => {\n  // console.log(data)\n  // const optimize = optimizeCards(categories, cards, spend, values, []);\n  // const signupBonusData = getSpendingForSignUpBonus(optimize, signupCards, values)\n  // const withSignupBonusData = optimizeCards(categories, cards, spend, values, signupCards, signupBonusData)\n  // console.log(withSignupBonusData)\n  const weeklySpend = Object.keys(spend).reduce((acc, cur) => {\n    return acc + spend[cur];\n  }, 0)\n\n  const before = getTotals(data, cards, signupCards, values, weeklySpend)\n  const b2 = getIndividualCashBackData(data, cards, signupCards, values, weeklySpend);\n  \n  console.log(b2)\n  console.log(before)\n  // console.log(signupBonusData)\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    minimumFractionDigits: 2,      \n    maximumFractionDigits: 2,\n });\n\n  const notChosen = allCards.filter(card => {\n    return cards.reduce((acc, cur) => {\n      return acc && (cur.cardName != card.cardName);\n    }, true);\n  })\n\n  const f = [];\n\n  notChosen.forEach(card => {\n\n    const newest = cards.reduce((acc, cur) => {\n      acc.push(cur)\n      return acc;\n    }, []);\n\n    newest.push(card);\n\n    const a1 = optimizeCards(categories, newest, spend, values, []);\n    const b1 = getSpendingForSignUpBonus(a1, [...signupCards, card], values, weeklySpend);\n    const c1 = optimizeCards(categories, newest, spend, values, [...signupCards, card], b1);\n    // const d1 = getTotals(c1, newest, [...signupCards, card], values, weeklySpend);\n    const e1 = getIndividualCashBackData(c1, newest, [...signupCards, card], values, weeklySpend)\n    console.log(e1)\n\n    const a2 = optimizeCards(categories, newest, spend, values, []);\n    // const d2 = getTotals(a2, newest, [], values, weeklySpend);\n    const e2 = getIndividualCashBackData(a2, newest, [], values, weeklySpend)\n\n    // console.log(b1)\n\n    f.push({\n      name: card.cardName,\n      spendingData: c1,\n      cardInfo: card,\n      addedValueYearOne: e1[card.cardName].totalValue,\n      addedValueYearTwo: e2[card.cardName].totalValue\n    })\n  })\n\n  return (\n    <div className=\"flex flex-col w-2/6 p-4 h-screen overflow-y-scroll\">\n      <div className=\"flex flex-none bg-white flex-wrap\">\n        {\n          [{pointType:'membershipRewards'}, {pointType:'chaseUltimateRewards'}].map((obj, index) => {\n            return <Points details={obj} categoryToIcon={categoryToIcon} data={data} categories={categories} key={index}/>\n          })\n        }\n      </div>\n      <div className=\"flex justify-between border-b-2 mt-8 mb-4 items-center\">\n        <div className=\"flex font-light text-xl\">\n            Card Spend Totals\n        </div>\n        <div className=\"flex font-light text-sm text-gray-400\">\n          Totals from all card spend\n        </div>\n      </div>\n      <div className='flex flex-row w-full'>\n        <div className='flex flex-col w-1/4 p-2 space-y-1'>\n          <div className='flex justify-center text-xl font-extralight'>Total Value</div>\n          <div className='flex justify-center text-green-400 text-md'>{`$${formatter.format(before.netValue)}`}</div>\n        </div>\n        <div className='flex flex-col w-1/4 p-2 space-y-1'>\n          <div className='flex justify-center text-xl font-extralight'>Spend</div>\n          <div className='flex justify-center text-blue-400 text-md'>{`$${formatter.format(before.totalSpend)}`}</div>\n        </div>\n        <div className='flex flex-col w-1/4 p-2 space-y-1'>\n          <div className='flex justify-center text-xl font-extralight'>Cash Back</div>\n          <div className='flex justify-center text-purple-400 text-md'>{`$${formatter.format(before.totalCashBack)}`}</div>\n        </div>\n        <div className='flex flex-col w-1/4 p-2 space-y-1'>\n          <div className='flex justify-center text-xl font-extralight'>Annual Fees</div>\n          <div className='flex justify-center text-red-400 text-md'>{`$${formatter.format(before.totalAnnualFee)}`}</div>\n        </div>\n      </div>\n\n\n      <div className=\"flex justify-between border-b-2 mt-8 mb-4 items-center\">\n        <div className=\"flex font-light text-xl\">\n            Card Spend Statistics\n        </div>\n        <div className=\"flex font-light text-sm text-gray-400\">\n          Try our following suggestions\n        </div>\n      </div>\n      <div className=\"flex flex-col p-2 space-y-3 mh-1/2 overflow-y-scroll flex-none\">\n        {\n          Object.keys(b2).map(key => {\n\n            const curCard = cards.filter(card => card.cardName == key)[0];\n\n            return (\n              <div className=\"flex flex-col bg-white border rounded-md p-2 space-y-1 shadow-md\">\n                <div className=\"flex justify-center border-b my-1 font-extralight\">{key}</div>\n                <div className=\"flex items-center text-sm text-gray-400\">Cash Back<span className=\"ml-2 text-md font-md mr-2 text-black\">{`$${formatter.format(b2[key].cashBack)}`}</span></div>\n                <div className=\"flex items-center text-sm text-gray-400\">Card Spend<span className=\"ml-2 text-md font-md mr-2 text-black\">{`$${formatter.format(b2[key].spend)}`}</span></div>\n                <div className=\"flex items-center text-sm text-gray-400\">Points / Cash Collected<span className=\"ml-2 text-md font-md mr-2 text-black\">{`${curCard.cardDetails.signupBonus.type === 'dollars' ? `$${formatter.format(b2[key].pointsCollected / 100)}` : b2[key].pointsCollected}`}</span></div>\n                <div className=\"flex items-center text-sm text-gray-400\">Bonus Recieved<span className=\"ml-2 text-md font-md mr-2 text-black\">{`${b2[key].bonus} / ${curCard.cardDetails.signupBonus.amount}`}</span></div>\n                <div className=\"flex items-center text-sm text-gray-400\">Total Value<span className={`ml-2 text-md font-md mr-2 text-black ${b2[key].totalValue >= 0 ? 'text-green-400' : 'text-red-400'}`}>{`$${formatter.format(b2[key].totalValue)}`}</span></div>\n                <div className=\"flex flex-col w-4/6 bg-gray-100 space-y-1 p-2 rounded-md\">\n                  <div className='flex justify-between'>\n                    <div className=\"flex items-center text-sm text-gray-400\">Total Spend</div>\n                    <div className=\"text-md font-md text-blue-400\">{`${formatter.format((b2[key].spend / before.totalSpend) * 100)}%`}</div>\n                  </div>\n                  <Bar bgcolor=\"#3c82f6\" completed={(b2[key].spend / before.totalSpend) * 100} content={formatter.format((b2[key].spend / before.totalSpend) * 100)}/>\n                </div>\n                <div className=\"flex flex-col w-4/6 bg-gray-100 space-y-1 p-2 rounded-md\">\n                  <div className='flex justify-between'>\n                    <div className=\"flex items-center text-sm text-gray-400\">Total Cash Back</div>\n                    <div className=\"text-md font-md text-purple-400\">{`${formatter.format((b2[key].cashBack / before.totalCashBack) * 100)}%`}</div>\n                  </div>\n                  <Bar bgcolor=\"#a88cfa\" completed={(b2[key].cashBack / before.totalCashBack) * 100}/>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n      <div className=\"flex justify-between border-b-2 mt-8 mb-4 items-center\">\n        <div className=\"flex font-light text-xl\">\n            Recommendations\n        </div>\n        <div className=\"flex font-light text-sm text-gray-400\">\n          Try our following suggestions\n        </div>\n      </div>\n      <div className=\"overflow-y-scroll flex flex-col p-2 space-y-4 flex-none h-4/6\">\n        {\n          f.map((card, index) => {\n            return (\n              <div className=\"flex flex-col items-start bg-gray-100 border rounded-md\">\n                <div className=\"px-4 mt-2\">\n                  <div className=\"flex items-center text-sm text-gray-400\">You can add<span className={`ml-2 text-md font-md mr-2 ${card.addedValueYearOne >= 0 ? 'text-green-400' : 'text-red-400'}`}>{`$${formatter.format(card.addedValueYearOne)}`}</span> of cash back the first Year you add this card</div>\n                  <div className=\"flex items-center text-sm text-gray-400\">You can add<span className={`ml-2 text-md font-md mr-2 ${card.addedValueYearTwo >= 0 ? 'text-green-400' : 'text-red-400'}`}>{`$${formatter.format(card.addedValueYearTwo)}`}</span> of cash back the second Year you add this card</div>\n                </div>\n                <div className=\"relative\">\n                  <button title=\"add Card\" className= \"absolute w-8 h-8 bg-white border rounded-full hover:bg-green-200 right-0 shadow-lg\" onClick={() => {\n                    setOptions(options.filter(option => option != card.name))\n                    setSignupCards([...signupCards, card.cardInfo])\n                    setWeeklyData(card.spendingData)\n                    handleChange([...selectedVals, card.cardInfo.cardName])\n                  }}>\n                    <img src='expand.svg'></img>\n                  </button>\n                  <Card card={card.cardInfo} selectedVals={selectedVals} categoryToIcon={categoryToIcon} key={index}/>\n                </div>\n             </div>\n            )\n          })\n        }\n      </div>\n      <button \n        className=\"p-4 bg-green-400 mt-4\"\n        onClick={() => { setSubmitted(prev => !prev) }}>\n        back\n      </button>\n    </div>\n  );\n}\n\nexport default RewardsSummary;","import React, { useState, useEffect } from 'react';\n\nexport function LocalStorageHook(initialVal, name) {\n  const key = name;\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(key)) || initialVal);\n  \n  useEffect(() => {\n    console.log(`setting value of ${name}`)\n    localStorage.setItem(key, JSON.stringify(data))\n  }, [data])\n\n  return [data, setData]\n}","import React, { useState, useEffect, useRef } from 'react';\nimport './styles/app.css';\nimport Card from './components/Card';\nimport SpendingForm from './components/SpendingForm';\nimport { optimizeCards, getIndividualCashBackData, getTotals, getSpendingForSignUpBonus } from './algo.js'\nimport PointSummary from './components/PointSummary'\nimport RewardsSummary from './components/RewardsSummary';\nimport { LocalStorageHook } from './functions.js'\n\nfunction App() {\n\n  let names = require('./credit.json');\n\n  const categoryToIcon = {\n    dining: \"serving-dish.svg\",\n    travel: \"plane.svg\",\n    groceries: \"shopping-cart.svg\",\n    other: \"infinity.svg\",\n    gas: \"gas.svg\",\n    flex: \"flex.svg\",\n    drugstore: \"drugstore.svg\",\n    streaming: \"streaming.svg\",\n    transit: \"train.svg\"\n  }\n\n  const categories = names.reduce((accumulator, val) => {\n    const items = val.cardDetails.cashBackCategories.filter(item => !accumulator.includes(item.category));\n    items.forEach(item => {\n      accumulator.push(item.category)\n    });\n    return accumulator;\n  },[])\n\n  const setExistingErrors = (cards) => {\n    let seenError = false;\n    if (cards.length == 0) {\n      setErrors(errors => {\n        console.log('cards error')\n        return {...errors, dropDown: true}\n      });\n      seenError = true;\n    }\n    if (pointsValue['chaseUltimateRewards'] === '' || isNaN(+pointsValue['chaseUltimateRewards'])) {\n      setErrors(errors => {\n        return {...errors, chaseUltimateRewards: true}\n      })\n      seenError = true;\n    }\n    if (pointsValue['membershipRewards'] === '' || isNaN(+pointsValue['membershipRewards'])) {\n      setErrors(errors => {\n        return {...errors, membershipRewards: true}\n      })\n      seenError = true;\n    }\n    return seenError\n  }\n\n  const convertToInt = (values) => {\n    return Object.keys(values).reduce((acc, cur) => {\n      acc[cur] = +values[cur]\n      return acc;\n    }, {})\n  }\n\n  const onSubmit = () => {\n    if (setExistingErrors(cards)) {\n      console.log('foundErrors')\n    }\n    // if (cards.length == 0) {\n    //   setError({...errors, dropDown: true});\n    // }\n    else {\n\n      const weeklySpend = Object.keys(inputValues).reduce((acc, cur) => {\n        return acc + inputValues[cur];\n      }, 0)\n\n      const v = convertToInt(pointsValue)\n\n      if (signupCards.length > 0) {\n        const optimize = optimizeCards(categories, cards, inputValues, v, []);\n        const signupBonusData = getSpendingForSignUpBonus(optimize, signupCards, v, weeklySpend)\n        console.log(signupBonusData)\n        const withSignupBonusData = optimizeCards(categories, cards, inputValues, v, signupCards, signupBonusData)\n        setWeeklyData(withSignupBonusData)\n      }\n      else {\n        const data = optimizeCards(categories, cards, inputValues, v, [])\n        setWeeklyData(data)\n      }\n      // setError(false)\n      setSubmitted(true)\n    }\n  }\n\n  const handleInputChange = (val, category) => {\n    setInputValues(prev => {\n      return {...prev, [category]: +val};\n    })\n  }\n\n  const getOptions = (cards) => {\n\n    return cards.reduce((acumulator, currentVal) => {\n      const obj = {};\n      obj.value = currentVal.id;\n      obj.label = currentVal.cardName;\n      acumulator.push(obj)\n      return acumulator\n\n    }, [])\n  }\n\n  const setDD = (val) => {\n    const newest = names.filter(name => {\n      return val.includes(name.cardName)\n    })\n    setddSelected(val)\n    setCards(newest)\n  }\n\n  // const [inputValues, setInputValues] = useState(() => {\n  //     return JSON.parse(localStorage.getItem('inputValues')) || categories.reduce((acc , cur) => {\n  //       acc[cur] = ''\n  //       return acc;\n  //     }, {})\n  // })\n  // const [ddselected, setddSelected] = useState([])\n  // const [pointsValue, setPointsValue] = useState({\"chaseUltimateRewards\": 0.015, \"membershipRewards\": 0.0125})\n  // const [submitted, setSubmitted] = useState(false)\n  // const [weeklyData, setWeeklyData] = useState([])\n  // const [cards, setCards] = useState([])\n  // const [signupCards, setSignupCards] = useState([])\n  // const [weeklySpend, setWeeklySpend] = useState(0)\n  // const [options, setOptions] = useState(() => names.map(card => card.cardName))\n  // const [errors, setErrors] = useState({dropDown: false, chaseUltimateRewards: false, membershipRewards: false})\n\n  const [inputValues, setInputValues] = LocalStorageHook(() => categories.reduce((acc , cur) => {\n    acc[cur] = ''\n    return acc;\n  }, {}), 'inputValues')\n  const [submitted, setSubmitted] = LocalStorageHook(false, 'submitted')\n  const [weeklyData, setWeeklyData] = LocalStorageHook([], 'weeklyData')\n  const [cards, setCards] = LocalStorageHook([], 'cards')\n  const [ddselected, setddSelected] = LocalStorageHook([], 'ddSelected')\n  const [signupCards, setSignupCards] = LocalStorageHook([], 'signupCards')\n  const [weeklySpend, setWeeklySpend] = LocalStorageHook(0, 'weelySpend')\n  const [options, setOptions] = LocalStorageHook(() => names.map(card => card.cardName), 'options')\n  const [errors, setErrors] = LocalStorageHook({dropDown: false, chaseUltimateRewards: false, membershipRewards: false}, 'errors')\n  const [pointsValue, setPointsValue] = LocalStorageHook({\"chaseUltimateRewards\": 0.015, \"membershipRewards\": 0.0125}, 'pointsValue')\n  const [open, setOpen] = useState(false)\n  \n  const ref1 = useRef()\n  const ref2 = useRef()\n  ref2.current = open\n  \n  useEffect(() => {\n\n    function checkForChildNodes(event, ref) {\n      if (event.target == ref.current) {return true}\n      for (let i = 0; i < ref.current.childNodes.length; i++) {\n        if (event.target == ref.current.childNodes[i]) {\n          return true\n        }\n      }\n      return false\n    }\n\n    function handleClick(event) {\n      if (ref2.current && !checkForChildNodes(event, ref1)) {\n        setOpen(false)\n      }\n    }\n\n    window.addEventListener(\"click\", handleClick);\n    return () => {\n      console.log('removing event listener')\n      window.removeEventListener(\"keyup\", handleClick)\n    }\n  }, [])\n\n  return (\n    <div className=\"\">\n      <div className=\"flex\">\n        <div className=\"w-4/6 h-screen flex flex-col\">\n          {\n            submitted ? (\n              <div className=\"bg-gray-100\">\n                <PointSummary \n                  setSubmitted={setSubmitted} \n                  weeklyData={weeklyData}\n                /> \n              </div>\n            )\n            : \n              (\n                <div className=\"flex flex-wrap content-start border-l rounded-lg bg-gray-100 shadow-xl overflow-y-scroll px-14\">\n                  {\n                    names.map((card, index) => {\n                      return <Card card={card} selectedVals={ddselected} categoryToIcon={categoryToIcon} key={index}/>\n                    })\n                  }\n                </div>\n              )\n          }\n        </div>\n          {\n            submitted ? (\n              <RewardsSummary\n                setSubmitted={setSubmitted} \n                categoryToIcon={categoryToIcon} \n                data={weeklyData} \n                cards={cards} \n                values={convertToInt(pointsValue)}\n                allCards={names}\n                categories={categories}\n                spend={inputValues}\n                selectedVals={ddselected}\n                handleChange={setDD}\n                setWeeklyData={setWeeklyData}\n                signupCards={signupCards}\n                setSignupCards={setSignupCards}\n                options={options}\n                setOptions={setOptions}\n              />\n            ) : (\n            <div className=\"flex flex-col space-y-2 w-2/6 p-4 space-y-5 overflow-y-scroll h-screen\">\n              <SpendingForm \n                ref1={ref1} \n                handleInputChange={handleInputChange} \n                inputValues={inputValues} \n                categories={categories} \n                onSubmit={onSubmit}\n                setDD={setDD}\n                ddselected={ddselected}\n                cards={names}\n                signupCards={signupCards}\n                setSignupCards={setSignupCards}\n                options={options}\n                setOptions={setOptions}\n                error={errors}\n                setError={setErrors}\n                pointsValue={pointsValue}\n                setPointsValue={setPointsValue}\n                open={open}\n                setOpen={setOpen}\n              />\n            </div>\n            )\n          }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}