[{"/Users/michaellosev/Desktop/cd/src/components/Card.js":"1","/Users/michaellosev/Desktop/cd/src/index.js":"2","/Users/michaellosev/Desktop/cd/src/App.js":"3","/Users/michaellosev/Desktop/cd/src/components/Points.js":"4","/Users/michaellosev/Desktop/cd/src/components/lineItem.js":"5","/Users/michaellosev/Desktop/cd/src/components/TextInput.js":"6","/Users/michaellosev/Desktop/cd/src/components/SpendingForm.js":"7","/Users/michaellosev/Desktop/cd/src/data.jsx":"8","/Users/michaellosev/Desktop/cd/src/algo.js":"9","/Users/michaellosev/Desktop/cd/src/components/PointSummary.js":"10","/Users/michaellosev/Desktop/cd/src/components/WeeklySpend.js":"11","/Users/michaellosev/Desktop/cd/src/components/WeeklySpendItem.js":"12","/Users/michaellosev/Desktop/cd/src/components/RewardsSummary.js":"13","/Users/michaellosev/Desktop/cd/src/components/Bar.js":"14","/Users/michaellosev/Desktop/cd/src/components/DropDownMenu.js":"15","/Users/michaellosev/Desktop/cd/src/components/DropDownMenuItem.js":"16","/Users/michaellosev/Desktop/cd/src/components/DropDownMenuSelect.js":"17","/Users/michaellosev/Desktop/cd/src/functions.js":"18"},{"size":1838,"mtime":1610903444392,"results":"19","hashOfConfig":"20"},{"size":366,"mtime":1608167045750,"results":"21","hashOfConfig":"20"},{"size":8480,"mtime":1610900996752,"results":"22","hashOfConfig":"20"},{"size":2254,"mtime":1610903741416,"results":"23","hashOfConfig":"20"},{"size":492,"mtime":1609220057225,"results":"24","hashOfConfig":"20"},{"size":1170,"mtime":1610573838131,"results":"25","hashOfConfig":"20"},{"size":5173,"mtime":1610675023406,"results":"26","hashOfConfig":"20"},{"size":235,"mtime":1608848127332,"results":"27","hashOfConfig":"20"},{"size":21028,"mtime":1610464342691,"results":"28","hashOfConfig":"20"},{"size":838,"mtime":1609698216891,"results":"29","hashOfConfig":"20"},{"size":1971,"mtime":1610674555105,"results":"30","hashOfConfig":"20"},{"size":1352,"mtime":1610674671353,"results":"31","hashOfConfig":"20"},{"size":9733,"mtime":1610904034371,"results":"32","hashOfConfig":"20"},{"size":649,"mtime":1610902353414,"results":"33","hashOfConfig":"20"},{"size":2024,"mtime":1610903529135,"results":"34","hashOfConfig":"20"},{"size":530,"mtime":1610903576493,"results":"35","hashOfConfig":"20"},{"size":284,"mtime":1610903491048,"results":"36","hashOfConfig":"20"},{"size":374,"mtime":1610745708497,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bhtihn",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michaellosev/Desktop/cd/src/components/Card.js",["78","79","80","81"],"/Users/michaellosev/Desktop/cd/src/index.js",[],["82","83"],"/Users/michaellosev/Desktop/cd/src/App.js",["84","85","86","87","88","89","90","91"],"/Users/michaellosev/Desktop/cd/src/components/Points.js",["92","93"],"/Users/michaellosev/Desktop/cd/src/components/lineItem.js",[],"/Users/michaellosev/Desktop/cd/src/components/TextInput.js",["94"],"import React from 'react'\n\nexport default function TextInput({ category, handleInputChange, inputValues, img }) {\n\n  const onChange = (e) => {\n    if (Number.isInteger(+e.target.value)) {\n      handleInputChange(+e.target.value, category)\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col mt-8 space-y-1\">\n      <div className=\"flex justify-between\">\n        <div className=\"capitalize text-sm text-gray-400\">{category}</div>\n        <div className=\"capitalize text-sm text-gray-400\">Weekly Spend</div>\n      </div>\n      <div className=\"flex items-center h-9\">\n        <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center border-l border-t border-b border-gray-200 rounded-l-md\"><img className='p-3' src={img}></img></div>\n        <input className=\"font-extraslim px-2 py-1 border h-full flex focus:outline-none focus:border-blue-200 text-sm\" type=\"text\" placeholder=\"Amount\" onChange={onChange} value={inputValues[category]}/>\n        <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center bg-gray-100 border-r border-t border-b border-gray-200 rounded-r-md\">.00</div>\n      </div>\n    </div>\n  );\n}\n","/Users/michaellosev/Desktop/cd/src/components/SpendingForm.js",["95","96","97","98","99","100"],"/Users/michaellosev/Desktop/cd/src/data.jsx",[],"/Users/michaellosev/Desktop/cd/src/algo.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"const values = {\n  \"chaseUltimateRewards\": 0.015,\n  \"membershipRewards\": 0.0125\n}\n\nconst cards = require('./credit.json');\n// const signUpCards = require ('./practice.json');\n\nconst addCard = (arr, cardName, spend, points, valueBack, rewardType) => {\n  arr.cards.push(\n    {\n      name: cardName,\n      spend: spend,\n      pointsCollected: spend * points,\n      cashBack: valueBack * spend,\n      pointType: rewardType,\n      valueBack: valueBack\n    }\n  )\n}\n\nconst getSpendForTime = (weeklySpend, months) => {\n  let now = new Date();\n  const then = addMonths(now, months);\n  let weeks = 0;\n  while (now < then) {\n    weeks++;\n    now.setDate(now.getDate() + 7);\n  }\n  return weeklySpend * weeks;\n}\n\nconst getMatrix = (original, width, height) => {\n  const newest = new Array(width+1);\n  for (let i = 0; i < newest.length; i++) {\n    newest[i] = new Array(height+1);\n  }\n  for (let i = 0; i < original.length; i++) {\n    for(let j = 0; j < newest[0].length; j++) {\n      if (j < original[0].length) {\n        newest[i][j] = original[i][j]\n      }\n      else {\n        newest[i][j] = newest[i][j-1]\n      }\n    }\n  }\n  return newest;\n}\n\nconst knapsackFullOfCards = (c, spend, values) => {\n  // seperate the cards with different times to earn signupBonus into differnt groups\n  const groups = c.reduce((acc, cur) => {\n    if (acc.length == 0) {\n      acc.push([cur])\n    }\n    else {\n      let i = 0;\n      for(; i < acc.length; i++) {\n        if (acc[i][0].cardDetails.signupBonus.time == cur.cardDetails.signupBonus.time) {\n          acc[i].push(cur);\n          break;\n        }\n      }\n      if (i == acc.length) {\n        acc.push([cur]);\n      }\n    }\n    return acc;\n\n  }, []);\n\n  groups.sort((a, b) => {\n    return a[0].cardDetails.signupBonus.time - b[0].cardDetails.signupBonus.time;\n  })\n\n  const allCards = groups.reduce((acc, cur) => {\n    cur.forEach(card => {\n      acc.push(card)\n    })\n    return acc;\n  }, [])\n\n  let matrix = [[0]];\n  let totalSpend = 0;\n  let numCards = 0;\n\n  for (let a = 0; a < groups.length; a++) {\n    const cards = groups[a];\n    totalSpend =  Math.ceil(totalSpend + (getSpendForTime(spend, cards[0].cardDetails.signupBonus.time) - totalSpend));\n    matrix = getMatrix(matrix, numCards + cards.length, totalSpend)\n\n    for(let i = numCards+1; i < matrix.length; i++) {\n      for(let j = 0; j < matrix[0].length; j++) {\n        if (i == 0 || j == 0) {\n          matrix[i][j] = 0;\n        }\n        else if (allCards[i-1].cardDetails.signupBonus.neededSpend > j) {\n          matrix[i][j] = matrix[i-1][j];\n        }\n        else {\n          matrix[i][j] = Math.max(matrix[i-1][j], (allCards[i-1].cardDetails.signupBonus.amount * values[allCards[i-1].cardDetails.pointType]) + matrix[i-1][j-allCards[i-1].cardDetails.signupBonus.neededSpend]);\n        }\n      }\n    }\n    numCards += cards.length;\n  }\n\n  let chosen = [];\n  let i = numCards;\n  let j = totalSpend;\n  while (matrix[i][j] == matrix[i][j-1]) {\n    j--;\n  }\n  // console.log(j)\n  while (matrix[i][j] != 0) {\n    const val = (allCards[i-1].cardDetails.signupBonus.amount * values[allCards[i-1].cardDetails.pointType]);\n    const weight = allCards[i-1].cardDetails.signupBonus.neededSpend;\n    if (j-weight >= 0 && matrix[i-1][j-weight] == matrix[i][j] - val) {\n      chosen.push(allCards[i-1]);\n      i--;\n      j -= weight;\n    }\n    else {\n      i--;\n    }\n  }\n  return chosen\n}\n\nconst getFiltered = (cards, category, pointValue) => {\n  const result = cards.reduce((acc, cur) => {\n    const obj = {};\n    obj.name = cur.cardName;\n    obj.pointType = cur.cardDetails.pointType;\n    const categoryDetails = cur.cardDetails.cashBackCategories.filter(item => item.category == category);\n    const details = categoryDetails.length > 0 ? categoryDetails[0] : cur.cardDetails.cashBackCategories.filter(item => item.category == 'other')[0]\n    obj.details = {\n      category: details.category,\n      limit: details.limit,\n      period: details.period,\n      points: details.points,\n      timeUntil: details.timeUntil\n    }\n    obj.valueBack = obj.details.points * pointValue[obj.pointType];\n    acc.push(obj);\n    return acc;\n  }, [])\n\n  result.sort((a, b) => b.valueBack - a.valueBack);\n  return result;\n}\n\nconst addMonths = (date, months) => {\n  var d = date.getDate();\n  let newDate = new Date(date)\n  newDate.setMonth(newDate.getMonth() + +months);\n  if (newDate.getDate() != d) {\n    newDate.setDate(0);\n  }\n  return newDate;\n}\n\nexport function optimizer(cards, category, spend, pointValue, signUpCards, signUpCardsData) {\n  const startDate = new Date();\n  let curDate = new Date();\n  const result = [];\n\n  let filtered = getFiltered(cards, category, pointValue)\n\n  let highestCardIndex = 0;\n  let highestCard = filtered[highestCardIndex];\n  let _highestCard = highestCard;\n  let _highestCardIndex = highestCardIndex;\n  let _limit = 0;\n  let inEdgeCase = false;\n  let period = 0;\n  \n  for (let i = 0; i < 52; i++) {\n    let weeklySpend = spend;\n    const newest = {}\n    newest.date = curDate.toLocaleDateString();\n    newest.category = category;\n    newest.cards = [];\n    while (weeklySpend > 0) {\n      if (signUpCards.length > 0) {\n        if (Object.keys(signUpCardsData.result).includes(curDate.toLocaleDateString())) {\n          if (Object.keys(signUpCardsData.result[curDate.toLocaleDateString()]).includes(category)) {\n            const temp = signUpCardsData.result[curDate.toLocaleDateString()][category];\n            const tempCard = filtered.filter(card => card.name == temp.name)[0];\n            addCard(newest, temp.name, temp.spend, tempCard.details.points, tempCard.valueBack, tempCard.pointType);\n            weeklySpend -= temp.spend;\n            continue;\n          }\n        }\n      }\n      if (highestCardIndex >= filtered.length) {\n        filtered = getFiltered(cards, 'other', pointValue);\n        highestCardIndex = 0;\n        highestCard = filtered[highestCardIndex];\n      }\n      while (highestCard.details.limit == 0) {\n          highestCardIndex++;\n          if (highestCardIndex >= filtered.length) {\n            filtered = getFiltered(cards, 'other', pointValue);\n            highestCardIndex = 0;\n            highestCard = filtered[highestCardIndex];\n          }\n          else {\n            highestCard = filtered[highestCardIndex];\n          }\n      }\n      if (inEdgeCase) {\n        if (period != 0 && period % (_highestCard.details.period * 4) == 0) {\n          highestCard = _highestCard;\n          highestCardIndex = _highestCardIndex;\n          highestCard.details.limit = _limit;\n          period = 0;\n        } \n      }\n      if (highestCard.details.limit == null) {\n        if (highestCard.details.timeUntil == null) {\n          if (highestCard.details.period == null) {\n            addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            weeklySpend -= weeklySpend;\n          }\n        }\n        else {\n          if (typeof highestCard.details.timeUntil == 'number') {\n            if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n              highestCard = filtered[++highestCardIndex];\n            }\n            else {\n              addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n              weeklySpend -= weeklySpend;\n            }\n          }\n          else {\n            const newestDate = new Date(highestCard.details.timeUntil);\n            if (curDate >= newestDate) {\n              highestCard = filtered[++highestCardIndex];\n            }\n            else {\n              addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n              weeklySpend -= weeklySpend;\n            }\n          }\n        }\n      }\n      else {\n        if (highestCard.details.timeUntil == null) {\n          if (highestCard.details.limit >= weeklySpend) {\n            addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            highestCard.details.limit -= weeklySpend;\n            weeklySpend -= weeklySpend;\n          }\n          else {   \n            addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            weeklySpend -= highestCard.details.limit;\n            highestCard.details.limit = 0;\n            highestCard = filtered[++highestCardIndex];\n          }\n        }\n        else {\n          if (highestCard.details.period == null) {\n            if (typeof highestCard.details.timeUntil == 'number') {\n              if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n                highestCard = filtered[++highestCardIndex];\n              }\n              else {\n                if (highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n            else {\n              const newestDate = new Date(highestCard.details.timeUntil);\n              if (curDate >= newestDate) {\n                highestCard = filtered[++highestCardIndex];\n              }\n              else {\n                if (highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n          }\n          else {\n            inEdgeCase = true;\n            _limit = highestCard.details.limit;\n            _highestCard = highestCard;\n            _highestCardIndex = highestCardIndex;\n  \n            if (typeof highestCard.details.timeUntil == 'number') {\n              if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n                highestCard = filtered[++highestCardIndex];\n                inEdgeCase = false;\n              }\n              else {\n                if (period < highestCard.details.period * 4 && highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n            else {\n              const newestDate = new Date(highestCard.details.timeUntil);\n              if (curDate >= newestDate) {\n                highestCard = filtered[++highestCardIndex];\n                inEdgeCase = false\n              }\n              else {\n                if (period < highestCard.details.period * 4 && highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (inEdgeCase) {\n      period++;\n    }\n    result.push(newest);\n    curDate.setDate(curDate.getDate() + 7);\n  }\n  // for (let i = 0; i < result.length; i++) {\n  //   console.log(result[i].date)\n  //   console.log(result[i].cards)\n  // }\n  return result\n}\n\nexport function optimizeCards(categories, cards, spend, pointValue, signUpCards, signUpCardsData=null) {\n\n  const map = categories.map(category => {\n\n    return {\n      category: category,\n      result: optimizer(cards, category, spend[category], pointValue, signUpCards, signUpCardsData)\n    }\n\n  })\n\n  const res = map[0].result.reduce((acc, item) => {\n\n    const obj = {}\n    obj.date = item.date\n    obj.result = []\n    acc.push(obj)\n    return acc;\n\n  }, []) \n\n  for (let i = 0; i < 52; i++) {\n    for (let j = 0; j < categories.length; j++) {\n      res[i].result.push(\n        {\n          category: map[j].result[i].category,\n          cards: map[j].result[i].cards\n        }\n      );\n    }\n  }\n  return res;\n}\n\nexport function getIndividualCashBackData(data, cards, signUpCards, values, weeklySpend) {\n\n  const gotCashBack = getSpendingForSignUpBonus(data, signUpCards, values, weeklySpend).bonusHit\n\n  const result = data.reduce((acc, weekSpend) => {\n    weekSpend.result.forEach(categorySpend => {\n      categorySpend.cards.forEach(cardSpend => {\n        if (acc.hasOwnProperty(cardSpend.name)) {\n          acc[cardSpend.name].spend += cardSpend.spend;\n          acc[cardSpend.name].pointsCollected += cardSpend.pointsCollected;\n          acc[cardSpend.name].cashBack += cardSpend.cashBack;\n        }\n        else {\n          const cardSpendData = {}\n          cardSpendData.spend = cardSpend.spend;\n          cardSpendData.pointsCollected = cardSpend.pointsCollected;\n          cardSpendData.pointType = cardSpend.pointType;\n          cardSpendData.cashBack = cardSpend.cashBack;\n          if (gotCashBack != undefined && gotCashBack.includes(cardSpend.name)) {\n            cardSpendData.bonus = cards.filter(card => card.cardName == cardSpend.name)[0].cardDetails.signupBonus.amount\n          }\n          else {\n            cardSpendData.bonus = 0;\n          }\n          acc[cardSpend.name] = cardSpendData\n        }\n      })\n    })\n    return acc;\n  }, {})\n\n  cards.forEach(card => {\n    if (result.hasOwnProperty(card.cardName)) {\n      result[card.cardName].totalValue = result[card.cardName].cashBack - card.cardDetails.annualFee;\n      if (gotCashBack != undefined && gotCashBack.includes(card.cardName)) {\n        if (card.cardDetails.signupBonus.type != 'points') {\n          result[card.cardName].totalValue += result[card.cardName].bonus\n        }\n        else {\n          result[card.cardName].totalValue += (result[card.cardName].bonus * values[result[card.cardName].pointType])\n        }\n      }\n    }\n    else {\n      const cardSpendData = {};\n      cardSpendData.spend = 0;\n      cardSpendData.pointsCollected = 0;\n      cardSpendData.pointType = null;\n      cardSpendData.cashBack = 0;\n      cardSpendData.bonus = 0;\n      cardSpendData.totalValue = 0 - card.cardDetails.annualFee;\n      result[card.cardName] = cardSpendData;\n    }\n  })\n\n  return result;\n}\n\nexport function getTotals(data, cards, signUpCards, values, weeklySpend) {\n\n  const result = getIndividualCashBackData(data, cards, signUpCards, values, weeklySpend);\n\n  return cards.reduce((acc, card) => {\n    if (Object.keys(acc).length == 0) {\n      acc.totalCashBack = 0;\n      acc.totalAnnualFee = 0;\n      acc.netValue = 0;\n      acc.totalSpend = 0;\n      acc.totalBonuses = 0;\n    }\n\n    acc.totalCashBack += result[card.cardName].cashBack;\n    acc.totalAnnualFee += card.cardDetails.annualFee;\n    acc.netValue += result[card.cardName].totalValue;\n    acc.totalSpend += result[card.cardName].spend;\n    if (signUpCards.map(card => card.cardName).includes(card.cardName)) {\n      acc.totalBonuses += result[card.cardName].bonus;\n    }\n\n    return acc\n  }, {})\n}\n\nconst categories = cards.reduce((accumulator, val) => {\n  const items = val.cardDetails.cashBackCategories.filter(item => !accumulator.includes(item.category));\n  items.forEach(item => {\n    accumulator.push(item.category)\n  });\n  return accumulator;\n},[])\n\nconst spend = {\n  'dining': 50, \n  'travel': 80,\n  'groceries': 150,\n  'other': 10,\n  'drugstore': 10,\n  'streaming': 20,\n  'transit': 45,\n  'gas': 40\n}\n\nexport function getSpendingForSignUpBonus(data, cards, values, weeklySpend) {\n\n  const result = data.reduce((acc, cur) => {\n    cur.result.forEach(result => {\n      result.cards.forEach(card => {\n        if (acc.filter(item => item.valueBack === card.valueBack).length == 0) {\n          const newest = {};\n          newest.valueBack = card.valueBack;\n          newest.result = []\n          acc.push(newest);\n        }\n    \n        acc.filter(item => item.valueBack === card.valueBack)[0].result.push(\n          {\n            date: cur.date,\n            category: result.category,\n            valid: true,\n            spend: card\n          }\n        )\n        \n      })\n    })\n    return acc;\n  }, [])\n  \n  result.sort((a, b) => a.valueBack - b.valueBack)\n\n  const c = knapsackFullOfCards(cards, weeklySpend, values)\n  // console.log(c)\n  const g = c.reduce((acc, cur) => {\n    acc.push(cur.cardName);\n    return acc;\n  }, [])\n\n  const ans = cards.reduce((acc, card) => {\n    acc[card.cardName] = [];\n    return acc;\n  }, {})\n\n  cards.sort((a, b) => {\n    return a.cardDetails.signupBonus.time - b.cardDetails.signupBonus.time;\n  })\n\n  cards.forEach(card => {\n\n    if (g.includes(card.cardName)) {\n      let amount = card.cardDetails.signupBonus.neededSpend;\n      const deadline = addMonths(new Date(), card.cardDetails.signupBonus.time);\n      let index = 0;\n      let spendIndex = 0;\n  \n      while (amount > 0 && spendIndex < result.length) {\n        // console.log(spendIndex)\n        // console.log(index)\n        // console.log(ans)\n        if (index >= result[spendIndex].result.length || new Date(result[spendIndex].result[index].date) >= deadline) {\n          index = 0;\n          spendIndex++;\n        }\n        else {\n          if (result[spendIndex].result[index].valid) {\n            ans[card.cardName].push(\n              {\n                date: result[spendIndex].result[index].date,\n                category: result[spendIndex].result[index].category,\n                spend: result[spendIndex].result[index].spend.spend\n              }\n            )\n            amount -= result[spendIndex].result[index].spend.spend;\n            result[spendIndex].result[index].valid = false;\n          }\n          index++;\n        }\n      }\n    }\n\n    else {\n      ans[card.cardName] = []\n    }\n\n  })\n  // console.log(c)\n\n  const finalResult = Object.keys(ans).reduce((acc, cur) => {\n    if (!acc.hasOwnProperty('bonusHit')) {\n      acc.bonusHit = []\n      acc.result = {}\n    }\n    if (ans[cur].length == 0) {\n      return acc;\n    }\n    else {\n      acc.bonusHit.push(cur);\n      return acc;\n    }\n  }, {})\n\n  Object.keys(ans).forEach(key => {\n    ans[key].forEach(item => {\n      if (!finalResult.result.hasOwnProperty(item.date)) {\n        finalResult.result[item.date] = {};\n      }\n      finalResult.result[item.date][item.category] = \n        {\n          spend: item.spend,\n          name: key,\n        }\n    })\n  })\n  // console.log(finalResult)\n  return finalResult;\n}\n\n// const temp = ['Chase Freedom Unlimited', 'Chase Freedom Flex', 'American Express Gold Card', 'American Express Platinum Card', 'Chase Sapphire Reserve']\n// const signUpCards = cards.filter(card => temp.includes(card.cardName));\n\n// const ans = optimizeCards(categories, cards, spend, values, [], null);\n// ans.forEach(card => {\n//   console.log(card)\n// }) \n\n// const b = getSpendingForSignUpBonus(ans, signUpCards, values, 405);\n// console.log(b.result)\n\n// const c = optimizeCards(categories, cards, spend, values, signUpCards, b)\n// console.log(b)\n// c.forEach(item => {\n//   console.log(item.result[3])\n// })\n// console.log(getIndividualCashBackData(c, cards, signUpCards, values))\n\n// console.log(b)\n// console.log('finished')\n// optimizer(cards, 'groceries', 40000, values, \"M\")\n// console.log(getSpendForTime(250, 3));\n// console.log(b)\n// knapsackFullOfCards(b, 300, values)","/Users/michaellosev/Desktop/cd/src/components/PointSummary.js",["126"],"import React, { useState } from 'react';\nimport WeeklySpend from './WeeklySpend';\n\nconst PointSummary = ( {setSubmitted, weeklyData }) => {\n\n\n  return (\n      <div className='flex flex-col w-full h-screen border-l border-r shadow-xl rounded-lg p-4'>\n        <div className=\"flex justify-center items-center p-4 font-light text-xl border-b-2 bg-white\">\n          Weekly Spending Summary\n        </div>\n        <div className='flex flex-col overflow-y-scroll'>\n          {\n            weeklyData.map((data, index) => {\n              return <WeeklySpend data={data} index={index} key={index}/>\n            })\n          }\n        </div>\n        {/* <button \n          className=\"p-4 bg-green-400\"\n          onClick={() => { setSubmitted(prev => !prev) }}>\n          back\n        </button> */}\n      </div>\n  );\n}\n\nexport default PointSummary;","/Users/michaellosev/Desktop/cd/src/components/WeeklySpend.js",["127","128","129"],"/Users/michaellosev/Desktop/cd/src/components/WeeklySpendItem.js",["130","131","132"],"/Users/michaellosev/Desktop/cd/src/components/RewardsSummary.js",["133","134","135","136","137"],"/Users/michaellosev/Desktop/cd/src/components/Bar.js",["138"],"/Users/michaellosev/Desktop/cd/src/components/DropDownMenu.js",["139","140","141","142","143","144","145"],"/Users/michaellosev/Desktop/cd/src/components/DropDownMenuItem.js",["146"],"/Users/michaellosev/Desktop/cd/src/components/DropDownMenuSelect.js",[],"/Users/michaellosev/Desktop/cd/src/functions.js",["147","148"],{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":8,"column":131,"nodeType":"156","messageId":"157","endLine":8,"endColumn":133},{"ruleId":"154","severity":1,"message":"158","line":15,"column":174,"nodeType":"156","messageId":"157","endLine":15,"endColumn":176},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"149","severity":1,"message":"163","line":5,"column":25,"nodeType":"151","messageId":"152","endLine":5,"endColumn":50},{"ruleId":"149","severity":1,"message":"164","line":5,"column":52,"nodeType":"151","messageId":"152","endLine":5,"endColumn":61},{"ruleId":"154","severity":1,"message":"158","line":36,"column":22,"nodeType":"156","messageId":"157","endLine":36,"endColumn":24},{"ruleId":"149","severity":1,"message":"165","line":102,"column":9,"nodeType":"151","messageId":"152","endLine":102,"endColumn":19},{"ruleId":"149","severity":1,"message":"166","line":147,"column":10,"nodeType":"151","messageId":"152","endLine":147,"endColumn":21},{"ruleId":"149","severity":1,"message":"167","line":147,"column":23,"nodeType":"151","messageId":"152","endLine":147,"endColumn":37},{"ruleId":"154","severity":1,"message":"158","line":160,"column":24,"nodeType":"156","messageId":"157","endLine":160,"endColumn":26},{"ruleId":"154","severity":1,"message":"158","line":162,"column":26,"nodeType":"156","messageId":"157","endLine":162,"endColumn":28},{"ruleId":"149","severity":1,"message":"168","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":16},{"ruleId":"154","severity":1,"message":"158","line":13,"column":26,"nodeType":"156","messageId":"157","endLine":13,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":18,"column":151,"nodeType":"171","endLine":18,"endColumn":182},{"ruleId":"149","severity":1,"message":"150","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"172","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":14},{"ruleId":"149","severity":1,"message":"173","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":20},{"ruleId":"169","severity":1,"message":"170","line":73,"column":157,"nodeType":"171","endLine":73,"endColumn":193},{"ruleId":"169","severity":1,"message":"170","line":87,"column":157,"nodeType":"171","endLine":87,"endColumn":193},{"ruleId":"169","severity":1,"message":"170","line":97,"column":11,"nodeType":"171","endLine":97,"endColumn":64},{"ruleId":"149","severity":1,"message":"174","line":1,"column":7,"nodeType":"151","messageId":"152","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"158","line":54,"column":20,"nodeType":"156","messageId":"157","endLine":54,"endColumn":22},{"ruleId":"154","severity":1,"message":"158","line":60,"column":52,"nodeType":"156","messageId":"157","endLine":60,"endColumn":54},{"ruleId":"154","severity":1,"message":"158","line":65,"column":13,"nodeType":"156","messageId":"157","endLine":65,"endColumn":15},{"ruleId":"154","severity":1,"message":"158","line":95,"column":15,"nodeType":"156","messageId":"157","endLine":95,"endColumn":17},{"ruleId":"154","severity":1,"message":"158","line":95,"column":25,"nodeType":"156","messageId":"157","endLine":95,"endColumn":27},{"ruleId":"154","severity":1,"message":"158","line":112,"column":23,"nodeType":"156","messageId":"157","endLine":112,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":116,"column":23,"nodeType":"156","messageId":"157","endLine":116,"endColumn":25},{"ruleId":"154","severity":1,"message":"158","line":119,"column":48,"nodeType":"156","messageId":"157","endLine":119,"endColumn":50},{"ruleId":"154","severity":1,"message":"158","line":136,"column":93,"nodeType":"156","messageId":"157","endLine":136,"endColumn":95},{"ruleId":"154","severity":1,"message":"158","line":137,"column":135,"nodeType":"156","messageId":"157","endLine":137,"endColumn":137},{"ruleId":"154","severity":1,"message":"155","line":158,"column":25,"nodeType":"156","messageId":"157","endLine":158,"endColumn":27},{"ruleId":"154","severity":1,"message":"158","line":190,"column":64,"nodeType":"156","messageId":"157","endLine":190,"endColumn":66},{"ruleId":"154","severity":1,"message":"158","line":202,"column":40,"nodeType":"156","messageId":"157","endLine":202,"endColumn":42},{"ruleId":"154","severity":1,"message":"155","line":214,"column":20,"nodeType":"156","messageId":"157","endLine":214,"endColumn":22},{"ruleId":"154","severity":1,"message":"158","line":214,"column":71,"nodeType":"156","messageId":"157","endLine":214,"endColumn":73},{"ruleId":"154","severity":1,"message":"155","line":418,"column":27,"nodeType":"156","messageId":"157","endLine":418,"endColumn":29},{"ruleId":"154","severity":1,"message":"158","line":419,"column":70,"nodeType":"156","messageId":"157","endLine":419,"endColumn":72},{"ruleId":"154","severity":1,"message":"155","line":434,"column":23,"nodeType":"156","messageId":"157","endLine":434,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":435,"column":47,"nodeType":"156","messageId":"157","endLine":435,"endColumn":49},{"ruleId":"154","severity":1,"message":"158","line":463,"column":33,"nodeType":"156","messageId":"157","endLine":463,"endColumn":35},{"ruleId":"149","severity":1,"message":"175","line":483,"column":7,"nodeType":"151","messageId":"152","endLine":483,"endColumn":17},{"ruleId":"149","severity":1,"message":"176","line":491,"column":7,"nodeType":"151","messageId":"152","endLine":491,"endColumn":12},{"ruleId":"154","severity":1,"message":"158","line":507,"column":74,"nodeType":"156","messageId":"157","endLine":507,"endColumn":76},{"ruleId":"154","severity":1,"message":"158","line":591,"column":25,"nodeType":"156","messageId":"157","endLine":591,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"158","line":5,"column":42,"nodeType":"156","messageId":"157","endLine":5,"endColumn":44},{"ruleId":"154","severity":1,"message":"158","line":5,"column":56,"nodeType":"156","messageId":"157","endLine":5,"endColumn":58},{"ruleId":"169","severity":1,"message":"170","line":18,"column":13,"nodeType":"171","endLine":18,"endColumn":201},{"ruleId":"154","severity":1,"message":"158","line":10,"column":31,"nodeType":"156","messageId":"157","endLine":10,"endColumn":33},{"ruleId":"154","severity":1,"message":"158","line":18,"column":31,"nodeType":"156","messageId":"157","endLine":18,"endColumn":33},{"ruleId":"154","severity":1,"message":"158","line":26,"column":31,"nodeType":"156","messageId":"157","endLine":26,"endColumn":33},{"ruleId":"149","severity":1,"message":"177","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":32,"column":35,"nodeType":"156","messageId":"157","endLine":32,"endColumn":37},{"ruleId":"154","severity":1,"message":"158","line":118,"column":64,"nodeType":"156","messageId":"157","endLine":118,"endColumn":66},{"ruleId":"154","severity":1,"message":"155","line":166,"column":64,"nodeType":"156","messageId":"157","endLine":166,"endColumn":66},{"ruleId":"169","severity":1,"message":"170","line":171,"column":21,"nodeType":"171","endLine":171,"endColumn":43},{"ruleId":"149","severity":1,"message":"178","line":22,"column":9,"nodeType":"151","messageId":"152","endLine":22,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"179","line":7,"column":9,"nodeType":"151","messageId":"152","endLine":7,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":11,"column":56,"nodeType":"156","messageId":"157","endLine":11,"endColumn":58},{"ruleId":"154","severity":1,"message":"155","line":20,"column":59,"nodeType":"156","messageId":"157","endLine":20,"endColumn":61},{"ruleId":"154","severity":1,"message":"155","line":21,"column":69,"nodeType":"156","messageId":"157","endLine":21,"endColumn":71},{"ruleId":"154","severity":1,"message":"158","line":31,"column":31,"nodeType":"156","messageId":"157","endLine":31,"endColumn":33},{"ruleId":"169","severity":1,"message":"170","line":37,"column":9,"nodeType":"171","endLine":37,"endColumn":85},{"ruleId":"169","severity":1,"message":"170","line":14,"column":9,"nodeType":"171","endLine":14,"endColumn":46},{"ruleId":"149","severity":1,"message":"180","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":10,"column":6,"nodeType":"183","endLine":10,"endColumn":12,"suggestions":"184"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'log' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-native-reassign",["185"],"no-negated-in-lhs",["186"],"'getIndividualCashBackData' is defined but never used.","'getTotals' is defined but never used.","'getOptions' is assigned a value but never used.","'weeklySpend' is assigned a value but never used.","'setWeeklySpend' is assigned a value but never used.","'LineItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Select' is defined but never used.","'makeAnimated' is defined but never used.","'values' is assigned a value but never used.","'categories' is assigned a value but never used.","'spend' is assigned a value but never used.","'useEffect' is defined but never used.","'labelStyles' is assigned a value but never used.","'names' is assigned a value but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'key' and 'name'. Either include them or remove the dependency array.","ArrayExpression",["187"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [data, key, name]",{"range":"190","text":"191"},[339,345],"[data, key, name]"]