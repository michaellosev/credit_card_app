[{"/Users/michaellosev/Desktop/cd/src/components/Card.js":"1","/Users/michaellosev/Desktop/cd/src/index.js":"2","/Users/michaellosev/Desktop/cd/src/App.js":"3","/Users/michaellosev/Desktop/cd/src/components/Points.js":"4","/Users/michaellosev/Desktop/cd/src/components/lineItem.js":"5","/Users/michaellosev/Desktop/cd/src/components/TextInput.js":"6","/Users/michaellosev/Desktop/cd/src/components/SpendingForm.js":"7","/Users/michaellosev/Desktop/cd/src/data.jsx":"8","/Users/michaellosev/Desktop/cd/src/algo.js":"9","/Users/michaellosev/Desktop/cd/src/components/PointSummary.js":"10","/Users/michaellosev/Desktop/cd/src/components/WeeklySpend.js":"11","/Users/michaellosev/Desktop/cd/src/components/WeeklySpendItem.js":"12","/Users/michaellosev/Desktop/cd/src/components/RewardsSummary.js":"13","/Users/michaellosev/Desktop/cd/src/components/Bar.js":"14","/Users/michaellosev/Desktop/cd/src/components/DropDownMenu.js":"15","/Users/michaellosev/Desktop/cd/src/components/DropDownMenuItem.js":"16","/Users/michaellosev/Desktop/cd/src/components/DropDownMenuSelect.js":"17","/Users/michaellosev/Desktop/cd/src/functions.js":"18"},{"size":1810,"mtime":1610992598006,"results":"19","hashOfConfig":"20"},{"size":366,"mtime":1608167045750,"results":"21","hashOfConfig":"20"},{"size":8480,"mtime":1610992618530,"results":"22","hashOfConfig":"20"},{"size":2254,"mtime":1610903741416,"results":"23","hashOfConfig":"20"},{"size":492,"mtime":1609220057225,"results":"24","hashOfConfig":"20"},{"size":1170,"mtime":1610573838131,"results":"25","hashOfConfig":"20"},{"size":5173,"mtime":1610675023406,"results":"26","hashOfConfig":"20"},{"size":235,"mtime":1608848127332,"results":"27","hashOfConfig":"20"},{"size":21028,"mtime":1610464342691,"results":"28","hashOfConfig":"20"},{"size":838,"mtime":1609698216891,"results":"29","hashOfConfig":"20"},{"size":1971,"mtime":1610674555105,"results":"30","hashOfConfig":"20"},{"size":1352,"mtime":1610674671353,"results":"31","hashOfConfig":"20"},{"size":9733,"mtime":1611021496928,"results":"32","hashOfConfig":"20"},{"size":649,"mtime":1610902353414,"results":"33","hashOfConfig":"20"},{"size":2024,"mtime":1610903529135,"results":"34","hashOfConfig":"20"},{"size":530,"mtime":1610903576493,"results":"35","hashOfConfig":"20"},{"size":284,"mtime":1610903491048,"results":"36","hashOfConfig":"20"},{"size":374,"mtime":1610745708497,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1bhtihn",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"41"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"41"},"/Users/michaellosev/Desktop/cd/src/components/Card.js",["88","89","90"],"import React, { useState } from 'react';\nimport LineItem from './lineItem';\n\nconst Card = ({ card, selectedVals, categoryToIcon }) => {\n\n  return (\n      <div className={`bg-white rounded-xl p-6 m-4 space-y-3 shadow-lg ${selectedVals.filter(obj => obj === card.cardName).length != 0 ? 'border-2 border-green-400' : 'border-2 border-white'}`}>\n        <div className=\"relative flex justify-center border-b-2 border-gray-300 w-full text-center mb-4\">\n          <p className=\"font-sansserif text-lg font-semibold text-black\">{card.cardName}</p>\n        </div>\n        <div className=\"flex items-start h-48 space-x-8\">\n          <div className=\"flex flex-none flex-col h-full justify-around\">\n            <img className=\"w-52 h-32 mb-4\" src={card.image} alt=\"\"></img>\n            <p className=\"flex items-center text-sm text-gray-400\">Welcome Bonus<span className=\"ml-1 text-md font-md ml-1 text-black\">{`${card.cardDetails.signupBonus.type == 'points' ? `${card.cardDetails.signupBonus.amount} points` : `$${card.cardDetails.signupBonus.amount}`}`}</span></p>\n            <h1 className=\"flex items-center text-sm text-gray-400\">Anual Fee <span className=\"ml-1 text-md font-md ml-1 text-black\">{`$${card.cardDetails.annualFee}`}</span></h1>\n          </div>\n          <div className=\"bg-gray-100 w-44 py-3 px-4 rounded-md h-full overflow-y-scroll\">\n            <p className=\"border-b-2 border-gray-300 text-center text-black-100 text-sm font-bold mb-2\">Bonus Categories</p>\n            {\n              card.cardDetails.cashBackCategories.map((category, index) => {\n                return <LineItem icon={categoryToIcon[category.category]} category={category.category} val={`${category.points}X`} key={index}/>\n              })\n            }\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Card;",["91","92"],"/Users/michaellosev/Desktop/cd/src/index.js",[],"/Users/michaellosev/Desktop/cd/src/App.js",["93","94","95","96","97","98","99","100"],"import React, { useState, useEffect, useRef } from 'react';\nimport './styles/app.css';\nimport Card from './components/Card';\nimport SpendingForm from './components/SpendingForm';\nimport { optimizeCards, getIndividualCashBackData, getTotals, getSpendingForSignUpBonus } from './algo.js'\nimport PointSummary from './components/PointSummary'\nimport RewardsSummary from './components/RewardsSummary';\nimport { LocalStorageHook } from './functions.js'\n\nfunction App() {\n\n  let names = require('./credit.json');\n\n  const categoryToIcon = {\n    dining: \"serving-dish.svg\",\n    travel: \"plane.svg\",\n    groceries: \"shopping-cart.svg\",\n    other: \"infinity.svg\",\n    gas: \"gas.svg\",\n    flex: \"flex.svg\",\n    drugstore: \"drugstore.svg\",\n    streaming: \"streaming.svg\",\n    transit: \"train.svg\"\n  }\n\n  const categories = names.reduce((accumulator, val) => {\n    const items = val.cardDetails.cashBackCategories.filter(item => !accumulator.includes(item.category));\n    items.forEach(item => {\n      accumulator.push(item.category)\n    });\n    return accumulator;\n  },[])\n\n  const setExistingErrors = (cards) => {\n    let seenError = false;\n    if (cards.length == 0) {\n      setErrors(errors => {\n        console.log('cards error')\n        return {...errors, dropDown: true}\n      });\n      seenError = true;\n    }\n    if (pointsValue['chaseUltimateRewards'] === '' || isNaN(+pointsValue['chaseUltimateRewards'])) {\n      setErrors(errors => {\n        return {...errors, chaseUltimateRewards: true}\n      })\n      seenError = true;\n    }\n    if (pointsValue['membershipRewards'] === '' || isNaN(+pointsValue['membershipRewards'])) {\n      setErrors(errors => {\n        return {...errors, membershipRewards: true}\n      })\n      seenError = true;\n    }\n    return seenError\n  }\n\n  const convertToInt = (values) => {\n    return Object.keys(values).reduce((acc, cur) => {\n      acc[cur] = +values[cur]\n      return acc;\n    }, {})\n  }\n\n  const onSubmit = () => {\n    if (setExistingErrors(cards)) {\n      console.log('foundErrors')\n    }\n    // if (cards.length == 0) {\n    //   setError({...errors, dropDown: true});\n    // }\n    else {\n\n      const weeklySpend = Object.keys(inputValues).reduce((acc, cur) => {\n        return acc + inputValues[cur];\n      }, 0)\n\n      const v = convertToInt(pointsValue)\n\n      if (signupCards.length > 0) {\n        const optimize = optimizeCards(categories, cards, inputValues, v, []);\n        const signupBonusData = getSpendingForSignUpBonus(optimize, signupCards, v, weeklySpend)\n        console.log(signupBonusData)\n        const withSignupBonusData = optimizeCards(categories, cards, inputValues, v, signupCards, signupBonusData)\n        setWeeklyData(withSignupBonusData)\n      }\n      else {\n        const data = optimizeCards(categories, cards, inputValues, v, [])\n        setWeeklyData(data)\n      }\n      // setError(false)\n      setSubmitted(true)\n    }\n  }\n\n  const handleInputChange = (val, category) => {\n    setInputValues(prev => {\n      return {...prev, [category]: +val};\n    })\n  }\n\n  const getOptions = (cards) => {\n\n    return cards.reduce((acumulator, currentVal) => {\n      const obj = {};\n      obj.value = currentVal.id;\n      obj.label = currentVal.cardName;\n      acumulator.push(obj)\n      return acumulator\n\n    }, [])\n  }\n\n  const setDD = (val) => {\n    const newest = names.filter(name => {\n      return val.includes(name.cardName)\n    })\n    setddSelected(val)\n    setCards(newest)\n  }\n\n  // const [inputValues, setInputValues] = useState(() => {\n  //     return JSON.parse(localStorage.getItem('inputValues')) || categories.reduce((acc , cur) => {\n  //       acc[cur] = ''\n  //       return acc;\n  //     }, {})\n  // })\n  // const [ddselected, setddSelected] = useState([])\n  // const [pointsValue, setPointsValue] = useState({\"chaseUltimateRewards\": 0.015, \"membershipRewards\": 0.0125})\n  // const [submitted, setSubmitted] = useState(false)\n  // const [weeklyData, setWeeklyData] = useState([])\n  // const [cards, setCards] = useState([])\n  // const [signupCards, setSignupCards] = useState([])\n  // const [weeklySpend, setWeeklySpend] = useState(0)\n  // const [options, setOptions] = useState(() => names.map(card => card.cardName))\n  // const [errors, setErrors] = useState({dropDown: false, chaseUltimateRewards: false, membershipRewards: false})\n\n  const [inputValues, setInputValues] = LocalStorageHook(() => categories.reduce((acc , cur) => {\n    acc[cur] = ''\n    return acc;\n  }, {}), 'inputValues')\n  const [submitted, setSubmitted] = LocalStorageHook(false, 'submitted')\n  const [weeklyData, setWeeklyData] = LocalStorageHook([], 'weeklyData')\n  const [cards, setCards] = LocalStorageHook([], 'cards')\n  const [ddselected, setddSelected] = LocalStorageHook([], 'ddSelected')\n  const [signupCards, setSignupCards] = LocalStorageHook([], 'signupCards')\n  const [weeklySpend, setWeeklySpend] = LocalStorageHook(0, 'weelySpend')\n  const [options, setOptions] = LocalStorageHook(() => names.map(card => card.cardName), 'options')\n  const [errors, setErrors] = LocalStorageHook({dropDown: false, chaseUltimateRewards: false, membershipRewards: false}, 'errors')\n  const [pointsValue, setPointsValue] = LocalStorageHook({\"chaseUltimateRewards\": 0.015, \"membershipRewards\": 0.0125}, 'pointsValue')\n  const [open, setOpen] = useState(false)\n  \n  const ref1 = useRef()\n  const ref2 = useRef()\n  ref2.current = open\n  \n  useEffect(() => {\n\n    function checkForChildNodes(event, ref) {\n      if (event.target == ref.current) {return true}\n      for (let i = 0; i < ref.current.childNodes.length; i++) {\n        if (event.target == ref.current.childNodes[i]) {\n          return true\n        }\n      }\n      return false\n    }\n\n    function handleClick(event) {\n      if (ref2.current && !checkForChildNodes(event, ref1)) {\n        setOpen(false)\n      }\n    }\n\n    window.addEventListener(\"click\", handleClick);\n    return () => {\n      console.log('removing event listener')\n      window.removeEventListener(\"keyup\", handleClick)\n    }\n  }, [])\n\n  return (\n    <div className=\"\">\n      <div className=\"flex\">\n        <div className=\"w-4/6 h-screen flex flex-col\">\n          {\n            submitted ? (\n              <div className=\"bg-gray-100\">\n                <PointSummary \n                  setSubmitted={setSubmitted} \n                  weeklyData={weeklyData}\n                /> \n              </div>\n            )\n            : \n              (\n                <div className=\"flex flex-wrap content-start border-l rounded-lg bg-gray-100 shadow-xl overflow-y-scroll px-14\">\n                  {\n                    names.map((card, index) => {\n                      return <Card card={card} selectedVals={ddselected} categoryToIcon={categoryToIcon} key={index}/>\n                    })\n                  }\n                </div>\n              )\n          }\n        </div>\n          {\n            submitted ? (\n              <RewardsSummary\n                setSubmitted={setSubmitted} \n                categoryToIcon={categoryToIcon} \n                data={weeklyData} \n                cards={cards} \n                values={convertToInt(pointsValue)}\n                allCards={names}\n                categories={categories}\n                spend={inputValues}\n                selectedVals={ddselected}\n                handleChange={setDD}\n                setWeeklyData={setWeeklyData}\n                signupCards={signupCards}\n                setSignupCards={setSignupCards}\n                options={options}\n                setOptions={setOptions}\n              />\n            ) : (\n            <div className=\"flex flex-col space-y-2 w-2/6 p-4 space-y-5 overflow-y-scroll h-screen\">\n              <SpendingForm \n                ref1={ref1} \n                handleInputChange={handleInputChange} \n                inputValues={inputValues} \n                categories={categories} \n                onSubmit={onSubmit}\n                setDD={setDD}\n                ddselected={ddselected}\n                cards={names}\n                signupCards={signupCards}\n                setSignupCards={setSignupCards}\n                options={options}\n                setOptions={setOptions}\n                error={errors}\n                setError={setErrors}\n                pointsValue={pointsValue}\n                setPointsValue={setPointsValue}\n                open={open}\n                setOpen={setOpen}\n              />\n            </div>\n            )\n          }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/michaellosev/Desktop/cd/src/components/Points.js",["101","102"],"import React from 'react';\nimport LineItem from './lineItem';\nimport AnimatedNumber from \"animated-number-react\";\n\nconst Points = ({ details, categoryToIcon, data, categories }) => {\n\n  const formatValue = value => `${Number(value).toFixed(0)}`;\n\n  const getTotalPoints = (data, rewardType) => {\n    return data.reduce((acc, weekly) => {\n      weekly.result.forEach(_weekly => {\n        _weekly.cards.forEach(card => {\n          if (rewardType == card.pointType) {\n            if (!acc.hasOwnProperty(_weekly.category)) {\n              acc[_weekly.category] = 0;\n            }\n            acc[_weekly.category] += card.pointsCollected;\n          }\n        })\n      })\n      return acc;\n    }, {})\n  }\n\n  const points = getTotalPoints(data, details.pointType)\n\n  return (\n    <div className=\"w-1/2\">\n      <div className=\"flex flex-col items-center p-4 mx-2 border rounded-md space-y-2 shadow-md\">\n        <div className=\"text-center text-md font-semi border-b-2 border-gray-300 mb-1 w-full py-1 capitalize\">{details.pointType}</div>\n        <div className=\"w-full\">\n          {\n            categories.map((category, index) => {\n              return (\n                <div className=\"flex items-center space-x-4 w-full\">\n                  <img className=\"w-4 h-4\" src={categoryToIcon[category]} alt=\"\"></img>\n                  <div className=\"flex justify-between items-center w-full space-x-6\">\n                    <p className=\"flex items-center text-sm\">{category}</p>\n                    <AnimatedNumber\n                      className=\"text-blue-500 font-light text-lg\"\n                      value={points.hasOwnProperty(category) ? points[category] : 0}\n                      formatValue={formatValue}\n                      duration={1000}\n                      key={index}\n                    />\n                  </div>\n                </div>\n              )\n            })\n          }\n          {/* <LineItem icon=\"plane.svg\" category=\"travel\" val=\"0\"/>\n          <LineItem icon=\"serving-dish.svg\" category=\"restaurant\" val=\"0\"/>\n          <LineItem icon=\"infinity.svg\" category=\"Other\" val=\"0\"/>\n          <LineItem icon=\"shopping-cart.svg\" category=\"Groceries\" val=\"0\"/> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Points;","/Users/michaellosev/Desktop/cd/src/components/lineItem.js",[],"/Users/michaellosev/Desktop/cd/src/components/TextInput.js",["103"],"import React from 'react'\n\nexport default function TextInput({ category, handleInputChange, inputValues, img }) {\n\n  const onChange = (e) => {\n    if (Number.isInteger(+e.target.value)) {\n      handleInputChange(+e.target.value, category)\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col mt-8 space-y-1\">\n      <div className=\"flex justify-between\">\n        <div className=\"capitalize text-sm text-gray-400\">{category}</div>\n        <div className=\"capitalize text-sm text-gray-400\">Weekly Spend</div>\n      </div>\n      <div className=\"flex items-center h-9\">\n        <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center border-l border-t border-b border-gray-200 rounded-l-md\"><img className='p-3' src={img}></img></div>\n        <input className=\"font-extraslim px-2 py-1 border h-full flex focus:outline-none focus:border-blue-200 text-sm\" type=\"text\" placeholder=\"Amount\" onChange={onChange} value={inputValues[category]}/>\n        <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center bg-gray-100 border-r border-t border-b border-gray-200 rounded-r-md\">.00</div>\n      </div>\n    </div>\n  );\n}\n","/Users/michaellosev/Desktop/cd/src/components/SpendingForm.js",["104","105","106","107","108","109"],"import React, {useState} from 'react'\nimport TextInput from './TextInput'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport DropDownMenu from './DropDownMenu'\n\nexport default function SpendingForm({ handleInputChange, inputValues, categories, onSubmit, setDD, ddselected, cards, signupCards, setSignupCards, options, setOptions, error, setError, pointsValue, setPointsValue, ref1, open, setOpen }) {\n\n  const handleSubmit = (e) => {\n    onSubmit();\n  }\n\n  const handlePointsChange = (pointType, val) => {\n    setError(error => {\n      return {...error, [pointType]: false}\n    })\n    setPointsValue(prev => {\n        return {...prev, [pointType]: val}\n    })\n  }\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex font-light text-xl border-b-2 bg-white mb-8\">\n          Select the cards that you currently own\n      </div>\n      <DropDownMenu \n        ref1={ref1}\n        setDD={setDD} \n        ddselected={ddselected} \n        cards={cards} signupCards={signupCards} \n        setSignupCards={setSignupCards}\n        options={options}\n        setOptions={setOptions}\n        error={error}\n        setError={setError}\n        open={open}\n        setOpen={setOpen}\n      />\n      <div className=\"flex justify-between border-b-2 mt-8 items-center\">\n        <div className=\"flex font-light text-xl\">\n            Spending Categories\n        </div>\n        <div className=\"flex font-light text-sm text-gray-400\">\n          How much do you spend each Week?\n        </div>\n      </div>\n      <div className=\"flex flex-row items-center flex-wrap justify-between\">\n        {\n          categories.map((category, index) => {\n            return <TextInput category={category} handleInputChange={handleInputChange} inputValues={inputValues} img='dollar-symbol.svg' key={index}/>\n          })\n        }\n      </div>\n      <div className=\"flex justify-between border-b-2 mt-8 items-center\">\n        <div className=\"flex font-light text-xl\">\n            Reward Point Value\n        </div>\n        <div className=\"flex font-light text-sm text-gray-400\">\n          How many cents do you thing each point is worth?\n        </div>\n      </div>\n\n      <div className='flex justify-between'>\n  \n        <div className=\"flex flex-col mt-8 space-y-1\">\n          <div className=\"flex justify-between\">\n            <div className=\"capitalize text-sm text-gray-400\">ChaseUltimateRewards</div>\n            <div className=\"capitalize text-sm text-gray-400\">value</div>\n          </div>\n          <div className='flex flex-col space-y-2'>\n            <div className=\"flex items-center h-9\">\n              <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center border-l border-t border-b border-gray-200 rounded-l-md\"><img className='p-3' src='cash.svg'></img></div>\n              <input className={`font-extraslim px-2 py-1 border h-full flex focus:outline-none focus:border-blue-200 text-sm ${error['chaseUltimateRewards'] && 'border-red-300 focus:border-red-300'}`} type=\"text\" placeholder='amount' onChange={(e) => handlePointsChange('chaseUltimateRewards', e.target.value)} value={pointsValue['chaseUltimateRewards']}/>\n              <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center bg-gray-100 border-r border-t border-b border-gray-200 rounded-r-md\">.00</div>\n            </div>\n            {error['chaseUltimateRewards'] && <div className='text-sm font-extralight text-red-300'>Please input a valid number</div>}\n          </div>\n        </div>\n        <div className=\"flex flex-col mt-8 space-y-1\">\n          <div className=\"flex justify-between\">\n            <div className=\"capitalize text-sm text-gray-400\">MembershipRewards</div>\n            <div className=\"capitalize text-sm text-gray-400\">value</div>\n          </div>\n          <div className='flex flex-col space-y-2'>\n            <div className=\"flex items-center h-9\">\n              <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center border-l border-t border-b border-gray-200 rounded-l-md\"><img className='p-3' src='cash.svg'></img></div>\n              <input className={`font-extraslim px-2 py-1 border h-full flex focus:outline-none focus:border-blue-200 text-sm ${error['membershipRewards'] && 'border-red-300 focus:border-red-300'}`} type=\"text\" placeholder='amount' onChange={(e) => handlePointsChange('membershipRewards', e.target.value)} value={pointsValue['membershipRewards']}/>\n              <div className=\"flex-none font-semibold w-10 h-full flex justify-center items-center bg-gray-100 border-r border-t border-b border-gray-200 rounded-r-md\">.00</div>\n            </div>\n            {error['membershipRewards'] && <div className='text-sm font-extralight text-red-300'>Please input a valid number</div>}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <button className=\"bg-gray-100 rounded-full focus:outline-none border focus:border-red-300 hover:bg-green-300 mt-8\" onClick={handleSubmit}>\n          <img src=\"arrow-right.svg\" className=\"h-10 w-10 p-1\"></img>\n        </button>\n      </div>\n    </div>\n  )\n}\n","/Users/michaellosev/Desktop/cd/src/data.jsx",[],"/Users/michaellosev/Desktop/cd/src/algo.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"const values = {\n  \"chaseUltimateRewards\": 0.015,\n  \"membershipRewards\": 0.0125\n}\n\nconst cards = require('./credit.json');\n// const signUpCards = require ('./practice.json');\n\nconst addCard = (arr, cardName, spend, points, valueBack, rewardType) => {\n  arr.cards.push(\n    {\n      name: cardName,\n      spend: spend,\n      pointsCollected: spend * points,\n      cashBack: valueBack * spend,\n      pointType: rewardType,\n      valueBack: valueBack\n    }\n  )\n}\n\nconst getSpendForTime = (weeklySpend, months) => {\n  let now = new Date();\n  const then = addMonths(now, months);\n  let weeks = 0;\n  while (now < then) {\n    weeks++;\n    now.setDate(now.getDate() + 7);\n  }\n  return weeklySpend * weeks;\n}\n\nconst getMatrix = (original, width, height) => {\n  const newest = new Array(width+1);\n  for (let i = 0; i < newest.length; i++) {\n    newest[i] = new Array(height+1);\n  }\n  for (let i = 0; i < original.length; i++) {\n    for(let j = 0; j < newest[0].length; j++) {\n      if (j < original[0].length) {\n        newest[i][j] = original[i][j]\n      }\n      else {\n        newest[i][j] = newest[i][j-1]\n      }\n    }\n  }\n  return newest;\n}\n\nconst knapsackFullOfCards = (c, spend, values) => {\n  // seperate the cards with different times to earn signupBonus into differnt groups\n  const groups = c.reduce((acc, cur) => {\n    if (acc.length == 0) {\n      acc.push([cur])\n    }\n    else {\n      let i = 0;\n      for(; i < acc.length; i++) {\n        if (acc[i][0].cardDetails.signupBonus.time == cur.cardDetails.signupBonus.time) {\n          acc[i].push(cur);\n          break;\n        }\n      }\n      if (i == acc.length) {\n        acc.push([cur]);\n      }\n    }\n    return acc;\n\n  }, []);\n\n  groups.sort((a, b) => {\n    return a[0].cardDetails.signupBonus.time - b[0].cardDetails.signupBonus.time;\n  })\n\n  const allCards = groups.reduce((acc, cur) => {\n    cur.forEach(card => {\n      acc.push(card)\n    })\n    return acc;\n  }, [])\n\n  let matrix = [[0]];\n  let totalSpend = 0;\n  let numCards = 0;\n\n  for (let a = 0; a < groups.length; a++) {\n    const cards = groups[a];\n    totalSpend =  Math.ceil(totalSpend + (getSpendForTime(spend, cards[0].cardDetails.signupBonus.time) - totalSpend));\n    matrix = getMatrix(matrix, numCards + cards.length, totalSpend)\n\n    for(let i = numCards+1; i < matrix.length; i++) {\n      for(let j = 0; j < matrix[0].length; j++) {\n        if (i == 0 || j == 0) {\n          matrix[i][j] = 0;\n        }\n        else if (allCards[i-1].cardDetails.signupBonus.neededSpend > j) {\n          matrix[i][j] = matrix[i-1][j];\n        }\n        else {\n          matrix[i][j] = Math.max(matrix[i-1][j], (allCards[i-1].cardDetails.signupBonus.amount * values[allCards[i-1].cardDetails.pointType]) + matrix[i-1][j-allCards[i-1].cardDetails.signupBonus.neededSpend]);\n        }\n      }\n    }\n    numCards += cards.length;\n  }\n\n  let chosen = [];\n  let i = numCards;\n  let j = totalSpend;\n  while (matrix[i][j] == matrix[i][j-1]) {\n    j--;\n  }\n  // console.log(j)\n  while (matrix[i][j] != 0) {\n    const val = (allCards[i-1].cardDetails.signupBonus.amount * values[allCards[i-1].cardDetails.pointType]);\n    const weight = allCards[i-1].cardDetails.signupBonus.neededSpend;\n    if (j-weight >= 0 && matrix[i-1][j-weight] == matrix[i][j] - val) {\n      chosen.push(allCards[i-1]);\n      i--;\n      j -= weight;\n    }\n    else {\n      i--;\n    }\n  }\n  return chosen\n}\n\nconst getFiltered = (cards, category, pointValue) => {\n  const result = cards.reduce((acc, cur) => {\n    const obj = {};\n    obj.name = cur.cardName;\n    obj.pointType = cur.cardDetails.pointType;\n    const categoryDetails = cur.cardDetails.cashBackCategories.filter(item => item.category == category);\n    const details = categoryDetails.length > 0 ? categoryDetails[0] : cur.cardDetails.cashBackCategories.filter(item => item.category == 'other')[0]\n    obj.details = {\n      category: details.category,\n      limit: details.limit,\n      period: details.period,\n      points: details.points,\n      timeUntil: details.timeUntil\n    }\n    obj.valueBack = obj.details.points * pointValue[obj.pointType];\n    acc.push(obj);\n    return acc;\n  }, [])\n\n  result.sort((a, b) => b.valueBack - a.valueBack);\n  return result;\n}\n\nconst addMonths = (date, months) => {\n  var d = date.getDate();\n  let newDate = new Date(date)\n  newDate.setMonth(newDate.getMonth() + +months);\n  if (newDate.getDate() != d) {\n    newDate.setDate(0);\n  }\n  return newDate;\n}\n\nexport function optimizer(cards, category, spend, pointValue, signUpCards, signUpCardsData) {\n  const startDate = new Date();\n  let curDate = new Date();\n  const result = [];\n\n  let filtered = getFiltered(cards, category, pointValue)\n\n  let highestCardIndex = 0;\n  let highestCard = filtered[highestCardIndex];\n  let _highestCard = highestCard;\n  let _highestCardIndex = highestCardIndex;\n  let _limit = 0;\n  let inEdgeCase = false;\n  let period = 0;\n  \n  for (let i = 0; i < 52; i++) {\n    let weeklySpend = spend;\n    const newest = {}\n    newest.date = curDate.toLocaleDateString();\n    newest.category = category;\n    newest.cards = [];\n    while (weeklySpend > 0) {\n      if (signUpCards.length > 0) {\n        if (Object.keys(signUpCardsData.result).includes(curDate.toLocaleDateString())) {\n          if (Object.keys(signUpCardsData.result[curDate.toLocaleDateString()]).includes(category)) {\n            const temp = signUpCardsData.result[curDate.toLocaleDateString()][category];\n            const tempCard = filtered.filter(card => card.name == temp.name)[0];\n            addCard(newest, temp.name, temp.spend, tempCard.details.points, tempCard.valueBack, tempCard.pointType);\n            weeklySpend -= temp.spend;\n            continue;\n          }\n        }\n      }\n      if (highestCardIndex >= filtered.length) {\n        filtered = getFiltered(cards, 'other', pointValue);\n        highestCardIndex = 0;\n        highestCard = filtered[highestCardIndex];\n      }\n      while (highestCard.details.limit == 0) {\n          highestCardIndex++;\n          if (highestCardIndex >= filtered.length) {\n            filtered = getFiltered(cards, 'other', pointValue);\n            highestCardIndex = 0;\n            highestCard = filtered[highestCardIndex];\n          }\n          else {\n            highestCard = filtered[highestCardIndex];\n          }\n      }\n      if (inEdgeCase) {\n        if (period != 0 && period % (_highestCard.details.period * 4) == 0) {\n          highestCard = _highestCard;\n          highestCardIndex = _highestCardIndex;\n          highestCard.details.limit = _limit;\n          period = 0;\n        } \n      }\n      if (highestCard.details.limit == null) {\n        if (highestCard.details.timeUntil == null) {\n          if (highestCard.details.period == null) {\n            addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            weeklySpend -= weeklySpend;\n          }\n        }\n        else {\n          if (typeof highestCard.details.timeUntil == 'number') {\n            if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n              highestCard = filtered[++highestCardIndex];\n            }\n            else {\n              addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n              weeklySpend -= weeklySpend;\n            }\n          }\n          else {\n            const newestDate = new Date(highestCard.details.timeUntil);\n            if (curDate >= newestDate) {\n              highestCard = filtered[++highestCardIndex];\n            }\n            else {\n              addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n              weeklySpend -= weeklySpend;\n            }\n          }\n        }\n      }\n      else {\n        if (highestCard.details.timeUntil == null) {\n          if (highestCard.details.limit >= weeklySpend) {\n            addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            highestCard.details.limit -= weeklySpend;\n            weeklySpend -= weeklySpend;\n          }\n          else {   \n            addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n            weeklySpend -= highestCard.details.limit;\n            highestCard.details.limit = 0;\n            highestCard = filtered[++highestCardIndex];\n          }\n        }\n        else {\n          if (highestCard.details.period == null) {\n            if (typeof highestCard.details.timeUntil == 'number') {\n              if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n                highestCard = filtered[++highestCardIndex];\n              }\n              else {\n                if (highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n            else {\n              const newestDate = new Date(highestCard.details.timeUntil);\n              if (curDate >= newestDate) {\n                highestCard = filtered[++highestCardIndex];\n              }\n              else {\n                if (highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n          }\n          else {\n            inEdgeCase = true;\n            _limit = highestCard.details.limit;\n            _highestCard = highestCard;\n            _highestCardIndex = highestCardIndex;\n  \n            if (typeof highestCard.details.timeUntil == 'number') {\n              if (curDate >= addMonths(startDate, highestCard.details.timeUntil)) {\n                highestCard = filtered[++highestCardIndex];\n                inEdgeCase = false;\n              }\n              else {\n                if (period < highestCard.details.period * 4 && highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n            else {\n              const newestDate = new Date(highestCard.details.timeUntil);\n              if (curDate >= newestDate) {\n                highestCard = filtered[++highestCardIndex];\n                inEdgeCase = false\n              }\n              else {\n                if (period < highestCard.details.period * 4 && highestCard.details.limit >= weeklySpend) {\n                  addCard(newest, highestCard.name, weeklySpend, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  highestCard.details.limit -= weeklySpend;\n                  weeklySpend -= weeklySpend;\n                }\n                else {\n                  addCard(newest, highestCard.name, highestCard.details.limit, highestCard.details.points, highestCard.valueBack, highestCard.pointType);\n                  weeklySpend -= highestCard.details.limit;\n                  highestCard.details.limit = 0;\n                  highestCard = filtered[++highestCardIndex];\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (inEdgeCase) {\n      period++;\n    }\n    result.push(newest);\n    curDate.setDate(curDate.getDate() + 7);\n  }\n  // for (let i = 0; i < result.length; i++) {\n  //   console.log(result[i].date)\n  //   console.log(result[i].cards)\n  // }\n  return result\n}\n\nexport function optimizeCards(categories, cards, spend, pointValue, signUpCards, signUpCardsData=null) {\n\n  const map = categories.map(category => {\n\n    return {\n      category: category,\n      result: optimizer(cards, category, spend[category], pointValue, signUpCards, signUpCardsData)\n    }\n\n  })\n\n  const res = map[0].result.reduce((acc, item) => {\n\n    const obj = {}\n    obj.date = item.date\n    obj.result = []\n    acc.push(obj)\n    return acc;\n\n  }, []) \n\n  for (let i = 0; i < 52; i++) {\n    for (let j = 0; j < categories.length; j++) {\n      res[i].result.push(\n        {\n          category: map[j].result[i].category,\n          cards: map[j].result[i].cards\n        }\n      );\n    }\n  }\n  return res;\n}\n\nexport function getIndividualCashBackData(data, cards, signUpCards, values, weeklySpend) {\n\n  const gotCashBack = getSpendingForSignUpBonus(data, signUpCards, values, weeklySpend).bonusHit\n\n  const result = data.reduce((acc, weekSpend) => {\n    weekSpend.result.forEach(categorySpend => {\n      categorySpend.cards.forEach(cardSpend => {\n        if (acc.hasOwnProperty(cardSpend.name)) {\n          acc[cardSpend.name].spend += cardSpend.spend;\n          acc[cardSpend.name].pointsCollected += cardSpend.pointsCollected;\n          acc[cardSpend.name].cashBack += cardSpend.cashBack;\n        }\n        else {\n          const cardSpendData = {}\n          cardSpendData.spend = cardSpend.spend;\n          cardSpendData.pointsCollected = cardSpend.pointsCollected;\n          cardSpendData.pointType = cardSpend.pointType;\n          cardSpendData.cashBack = cardSpend.cashBack;\n          if (gotCashBack != undefined && gotCashBack.includes(cardSpend.name)) {\n            cardSpendData.bonus = cards.filter(card => card.cardName == cardSpend.name)[0].cardDetails.signupBonus.amount\n          }\n          else {\n            cardSpendData.bonus = 0;\n          }\n          acc[cardSpend.name] = cardSpendData\n        }\n      })\n    })\n    return acc;\n  }, {})\n\n  cards.forEach(card => {\n    if (result.hasOwnProperty(card.cardName)) {\n      result[card.cardName].totalValue = result[card.cardName].cashBack - card.cardDetails.annualFee;\n      if (gotCashBack != undefined && gotCashBack.includes(card.cardName)) {\n        if (card.cardDetails.signupBonus.type != 'points') {\n          result[card.cardName].totalValue += result[card.cardName].bonus\n        }\n        else {\n          result[card.cardName].totalValue += (result[card.cardName].bonus * values[result[card.cardName].pointType])\n        }\n      }\n    }\n    else {\n      const cardSpendData = {};\n      cardSpendData.spend = 0;\n      cardSpendData.pointsCollected = 0;\n      cardSpendData.pointType = null;\n      cardSpendData.cashBack = 0;\n      cardSpendData.bonus = 0;\n      cardSpendData.totalValue = 0 - card.cardDetails.annualFee;\n      result[card.cardName] = cardSpendData;\n    }\n  })\n\n  return result;\n}\n\nexport function getTotals(data, cards, signUpCards, values, weeklySpend) {\n\n  const result = getIndividualCashBackData(data, cards, signUpCards, values, weeklySpend);\n\n  return cards.reduce((acc, card) => {\n    if (Object.keys(acc).length == 0) {\n      acc.totalCashBack = 0;\n      acc.totalAnnualFee = 0;\n      acc.netValue = 0;\n      acc.totalSpend = 0;\n      acc.totalBonuses = 0;\n    }\n\n    acc.totalCashBack += result[card.cardName].cashBack;\n    acc.totalAnnualFee += card.cardDetails.annualFee;\n    acc.netValue += result[card.cardName].totalValue;\n    acc.totalSpend += result[card.cardName].spend;\n    if (signUpCards.map(card => card.cardName).includes(card.cardName)) {\n      acc.totalBonuses += result[card.cardName].bonus;\n    }\n\n    return acc\n  }, {})\n}\n\nconst categories = cards.reduce((accumulator, val) => {\n  const items = val.cardDetails.cashBackCategories.filter(item => !accumulator.includes(item.category));\n  items.forEach(item => {\n    accumulator.push(item.category)\n  });\n  return accumulator;\n},[])\n\nconst spend = {\n  'dining': 50, \n  'travel': 80,\n  'groceries': 150,\n  'other': 10,\n  'drugstore': 10,\n  'streaming': 20,\n  'transit': 45,\n  'gas': 40\n}\n\nexport function getSpendingForSignUpBonus(data, cards, values, weeklySpend) {\n\n  const result = data.reduce((acc, cur) => {\n    cur.result.forEach(result => {\n      result.cards.forEach(card => {\n        if (acc.filter(item => item.valueBack === card.valueBack).length == 0) {\n          const newest = {};\n          newest.valueBack = card.valueBack;\n          newest.result = []\n          acc.push(newest);\n        }\n    \n        acc.filter(item => item.valueBack === card.valueBack)[0].result.push(\n          {\n            date: cur.date,\n            category: result.category,\n            valid: true,\n            spend: card\n          }\n        )\n        \n      })\n    })\n    return acc;\n  }, [])\n  \n  result.sort((a, b) => a.valueBack - b.valueBack)\n\n  const c = knapsackFullOfCards(cards, weeklySpend, values)\n  // console.log(c)\n  const g = c.reduce((acc, cur) => {\n    acc.push(cur.cardName);\n    return acc;\n  }, [])\n\n  const ans = cards.reduce((acc, card) => {\n    acc[card.cardName] = [];\n    return acc;\n  }, {})\n\n  cards.sort((a, b) => {\n    return a.cardDetails.signupBonus.time - b.cardDetails.signupBonus.time;\n  })\n\n  cards.forEach(card => {\n\n    if (g.includes(card.cardName)) {\n      let amount = card.cardDetails.signupBonus.neededSpend;\n      const deadline = addMonths(new Date(), card.cardDetails.signupBonus.time);\n      let index = 0;\n      let spendIndex = 0;\n  \n      while (amount > 0 && spendIndex < result.length) {\n        // console.log(spendIndex)\n        // console.log(index)\n        // console.log(ans)\n        if (index >= result[spendIndex].result.length || new Date(result[spendIndex].result[index].date) >= deadline) {\n          index = 0;\n          spendIndex++;\n        }\n        else {\n          if (result[spendIndex].result[index].valid) {\n            ans[card.cardName].push(\n              {\n                date: result[spendIndex].result[index].date,\n                category: result[spendIndex].result[index].category,\n                spend: result[spendIndex].result[index].spend.spend\n              }\n            )\n            amount -= result[spendIndex].result[index].spend.spend;\n            result[spendIndex].result[index].valid = false;\n          }\n          index++;\n        }\n      }\n    }\n\n    else {\n      ans[card.cardName] = []\n    }\n\n  })\n  // console.log(c)\n\n  const finalResult = Object.keys(ans).reduce((acc, cur) => {\n    if (!acc.hasOwnProperty('bonusHit')) {\n      acc.bonusHit = []\n      acc.result = {}\n    }\n    if (ans[cur].length == 0) {\n      return acc;\n    }\n    else {\n      acc.bonusHit.push(cur);\n      return acc;\n    }\n  }, {})\n\n  Object.keys(ans).forEach(key => {\n    ans[key].forEach(item => {\n      if (!finalResult.result.hasOwnProperty(item.date)) {\n        finalResult.result[item.date] = {};\n      }\n      finalResult.result[item.date][item.category] = \n        {\n          spend: item.spend,\n          name: key,\n        }\n    })\n  })\n  // console.log(finalResult)\n  return finalResult;\n}\n\n// const temp = ['Chase Freedom Unlimited', 'Chase Freedom Flex', 'American Express Gold Card', 'American Express Platinum Card', 'Chase Sapphire Reserve']\n// const signUpCards = cards.filter(card => temp.includes(card.cardName));\n\n// const ans = optimizeCards(categories, cards, spend, values, [], null);\n// ans.forEach(card => {\n//   console.log(card)\n// }) \n\n// const b = getSpendingForSignUpBonus(ans, signUpCards, values, 405);\n// console.log(b.result)\n\n// const c = optimizeCards(categories, cards, spend, values, signUpCards, b)\n// console.log(b)\n// c.forEach(item => {\n//   console.log(item.result[3])\n// })\n// console.log(getIndividualCashBackData(c, cards, signUpCards, values))\n\n// console.log(b)\n// console.log('finished')\n// optimizer(cards, 'groceries', 40000, values, \"M\")\n// console.log(getSpendForTime(250, 3));\n// console.log(b)\n// knapsackFullOfCards(b, 300, values)","/Users/michaellosev/Desktop/cd/src/components/PointSummary.js",["135"],"import React, { useState } from 'react';\nimport WeeklySpend from './WeeklySpend';\n\nconst PointSummary = ( {setSubmitted, weeklyData }) => {\n\n\n  return (\n      <div className='flex flex-col w-full h-screen border-l border-r shadow-xl rounded-lg p-4'>\n        <div className=\"flex justify-center items-center p-4 font-light text-xl border-b-2 bg-white\">\n          Weekly Spending Summary\n        </div>\n        <div className='flex flex-col overflow-y-scroll'>\n          {\n            weeklyData.map((data, index) => {\n              return <WeeklySpend data={data} index={index} key={index}/>\n            })\n          }\n        </div>\n        {/* <button \n          className=\"p-4 bg-green-400\"\n          onClick={() => { setSubmitted(prev => !prev) }}>\n          back\n        </button> */}\n      </div>\n  );\n}\n\nexport default PointSummary;","/Users/michaellosev/Desktop/cd/src/components/WeeklySpend.js",["136","137","138"],"import React, { useState } from 'react';\nimport WeeklySpendItem from './WeeklySpendItem';\n\nconst WeeklySpend = ({ data, index }) => {\n  const [open, setOpen] = useState(index == 0 || index == 1 ? true : false)\n  \n  const getTotalSpent = (data, type) => {\n    return data.result.reduce((acc, cur) => {\n      return acc + cur.cards.reduce((_acc, _cur) => {\n        return _acc + _cur[type];\n      }, 0)\n    }, 0)\n  }\n  return (\n      <div className='flex flex-col w-full p-2 border-b-2 bg-white'>\n        <div className=\"flex mb-2 mt-2 items-center\">\n          <div className=\"w-1/4 flex flex-row items-center space-x-2\">\n            <img src={open ? 'minus.svg' : 'expand.svg'} className=\"flex justify-center items-center bg-gray-100 h-4 w-4 border rounded-md focus:outline-none\" onClick={() => {setOpen(prev => !prev)}}></img>\n            <div className=\"flex justify-start text-sm\">{data.date}</div>\n          </div>\n          <div className=\"w-1/4 text-sm flex justify-center\">Card</div>\n          <div className=\"w-1/4 text-sm flex justify-center\">Spend</div>\n          <div className=\"w-1/4 flex justify-end text-sm\">Points Earned</div>\n        </div>\n        <div className={!open ? \"hidden\" : \"block\"}>\n          {\n            data.result.map(weeklyLineItem => {\n              return <WeeklySpendItem data={weeklyLineItem}/>\n            })\n          }\n          <div className=\"flex mt-2\">\n            <div className=\"w-1/4\"></div>\n            <div className=\"w-1/4 flex justify-center text-sm\">totals</div>\n            <div className=\"w-1/4 flex items-center justify-center truncate tracking-widest text-sm\"><span className='text-lg font-light'>$</span>{getTotalSpent(data, 'spend').toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\n            <div className=\"w-1/4 flex items-center justify-end truncate tracking-widest text-sm\">{getTotalSpent(data, 'pointsCollected')}</div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default WeeklySpend;","/Users/michaellosev/Desktop/cd/src/components/WeeklySpendItem.js",["139","140","141"],"import React from 'react';\n\nconst WeeklySpendItem = ({ data }) => {\n\n  return (\n      <div className='flex flex-row w-full px-2 border-b bg-white text-sm items-center'>\n        <div className=\"flex justify-start w-1/4 text-sm font-extralight\">{data.category}</div>\n        <div className=\"flex text-center flex-col w-1/4\">\n          {\n            data.cards.length == 0 ? '-':\n            data.cards.map(card => {\n              return <div className=\"truncate text-sm font-extralight\">{card.name}</div>\n            })\n          }\n        </div>\n        <div className=\"flex flex-col w-1/4\">\n          {\n            data.cards.length == 0 ? <div className='flex justify-center'>-</div>:\n            data.cards.map(card => {\n              return <div className=\"flex items-center justify-start ml-28 truncate font-extralight tracking-widest\"><span className='text-lg font-extralight'>$</span>{card.spend.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\n            })\n          }\n        </div>\n        <div className=\"flex flex-col items-end w-1/4\">\n          {\n            data.cards.length == 0 ? '-':\n            data.cards.map(card => {\n              return <div className=\"flex items-center truncate font-extralight\">{card.pointsCollected}</div>\n            })\n          }\n        </div>\n      </div>\n  );\n}\n\nexport default WeeklySpendItem;\n","/Users/michaellosev/Desktop/cd/src/components/RewardsSummary.js",["142","143","144","145","146"],"/Users/michaellosev/Desktop/cd/src/components/Bar.js",["147"],"import React from 'react';\n\nconst Bar = ({ bgcolor, completed }) => {\n  \n  const containerStyles = {\n    height: 14,\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 4,\n  }\n\n  const fillerStyles = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 'inherit',\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: 'inherit',\n    textAlign: 'right'\n  }\n\n  const labelStyles = {\n    fontSize: 10,\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n      </div>\n    </div>\n  )\n}\n\nexport default Bar;","/Users/michaellosev/Desktop/cd/src/components/DropDownMenu.js",["148","149","150","151","152","153","154"],"import React, { useState } from 'react'\nimport DropDownMenuItem from './DropDownMenuItem'\nimport DropDownMenuSelect from './DropDownMenuSelect'\n\nfunction DropDownMenu({ setDD, ddselected, cards, signupCards, setSignupCards, options, setOptions, error, setError, ref1, open, setOpen }) {\n\n  const names = cards.map(card => card.cardName)\n  options = options.sort()\n\n  const handleClick = (name) => {\n    const newOptions = options.filter(option => option != name);\n    setOptions(newOptions);\n    setDD([...ddselected, name])\n    setError(errors => {\n      return {...errors, dropDown: false}\n    })\n  }\n\n  const handleClose = (name) => {\n    const newest = ddselected.filter(selected => selected != name);\n    const newSignupCards = signupCards.filter(card => card.cardName != name);\n    setSignupCards(newSignupCards)\n    setDD(newest);\n    setOptions([name, ...options]);\n  }\n\n  return (\n    <>\n      <div className={`width-full border rounded-xl p-2 flex justify-center items-center ${(open && !error['dropDown']) && 'border-blue-300'} ${error['dropDown'] && 'border-red-400'}`} onClick={() => {setOpen(prev => !prev)}} ref={ref1}>\n        <div className=\"flex flex-wrap w-full border-r-2\" >\n          { ddselected.length == 0 ? (error['dropDown'] ? <div className=\"text-red-300\">Please select at least one card ...</div> : <div className=\"text-gray-400\">Select ...</div>)\n          : ddselected.map((selected, index) => {\n              return <DropDownMenuItem name={selected} handleClose={handleClose} key={index}/>\n            })\n          }\n        </div>\n        <img src=\"arrow-right.svg\" className=\"h-6 w-6 p-1 transform rotate-90 ml-2\"></img>\n      </div>\n        {open && (\n            <div className=\"border mt-2 rounded-xl\">\n              {\n                options.map((option, index) => {\n                  return <DropDownMenuSelect name={option} handleClick={handleClick} key={index}/>\n                })\n              }\n            </div>\n          )\n        }\n    </>\n  )\n}\n\n\n\nexport default DropDownMenu\n","/Users/michaellosev/Desktop/cd/src/components/DropDownMenuItem.js",["155"],"import React from 'react'\n\nexport default function DropDownMenuItem({ name, handleClose }) {\n  return (\n    <div className=\"flex border rounded-xl px-2 text-sm bg-gray-200 mt-1 ml-1 items-center space-x-2 relative\">\n      <div className=\"\">\n        {name}\n      </div>\n      <button className=\"focus:outline-none hover:bg-red-300 border rounded-sm\" onClick={(e) => {\n          e.stopPropagation();\n          handleClose(name)\n        }\n      }>\n        <img src=\"x.svg\" className=\"h-4 w-4\"></img>\n      </button>\n    </div>\n  )\n}\n","/Users/michaellosev/Desktop/cd/src/components/DropDownMenuSelect.js",[],"/Users/michaellosev/Desktop/cd/src/functions.js",["156","157"],"import React, { useState, useEffect } from 'react';\n\nexport function LocalStorageHook(initialVal, name) {\n  const key = name;\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(key)) || initialVal);\n  \n  useEffect(() => {\n    console.log(`setting value of ${name}`)\n    localStorage.setItem(key, JSON.stringify(data))\n  }, [data])\n\n  return [data, setData]\n}",{"ruleId":"158","severity":1,"message":"159","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":7,"column":131,"nodeType":"164","messageId":"165","endLine":7,"endColumn":133},{"ruleId":"162","severity":1,"message":"166","line":14,"column":174,"nodeType":"164","messageId":"165","endLine":14,"endColumn":176},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"158","severity":1,"message":"171","line":5,"column":25,"nodeType":"160","messageId":"161","endLine":5,"endColumn":50},{"ruleId":"158","severity":1,"message":"172","line":5,"column":52,"nodeType":"160","messageId":"161","endLine":5,"endColumn":61},{"ruleId":"162","severity":1,"message":"166","line":36,"column":22,"nodeType":"164","messageId":"165","endLine":36,"endColumn":24},{"ruleId":"158","severity":1,"message":"173","line":102,"column":9,"nodeType":"160","messageId":"161","endLine":102,"endColumn":19},{"ruleId":"158","severity":1,"message":"174","line":147,"column":10,"nodeType":"160","messageId":"161","endLine":147,"endColumn":21},{"ruleId":"158","severity":1,"message":"175","line":147,"column":23,"nodeType":"160","messageId":"161","endLine":147,"endColumn":37},{"ruleId":"162","severity":1,"message":"166","line":160,"column":24,"nodeType":"164","messageId":"165","endLine":160,"endColumn":26},{"ruleId":"162","severity":1,"message":"166","line":162,"column":26,"nodeType":"164","messageId":"165","endLine":162,"endColumn":28},{"ruleId":"158","severity":1,"message":"176","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":16},{"ruleId":"162","severity":1,"message":"166","line":13,"column":26,"nodeType":"164","messageId":"165","endLine":13,"endColumn":28},{"ruleId":"177","severity":1,"message":"178","line":18,"column":151,"nodeType":"179","endLine":18,"endColumn":182},{"ruleId":"158","severity":1,"message":"159","line":1,"column":16,"nodeType":"160","messageId":"161","endLine":1,"endColumn":24},{"ruleId":"158","severity":1,"message":"180","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"181","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":20},{"ruleId":"177","severity":1,"message":"178","line":73,"column":157,"nodeType":"179","endLine":73,"endColumn":193},{"ruleId":"177","severity":1,"message":"178","line":87,"column":157,"nodeType":"179","endLine":87,"endColumn":193},{"ruleId":"177","severity":1,"message":"178","line":97,"column":11,"nodeType":"179","endLine":97,"endColumn":64},{"ruleId":"158","severity":1,"message":"182","line":1,"column":7,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"166","line":54,"column":20,"nodeType":"164","messageId":"165","endLine":54,"endColumn":22},{"ruleId":"162","severity":1,"message":"166","line":60,"column":52,"nodeType":"164","messageId":"165","endLine":60,"endColumn":54},{"ruleId":"162","severity":1,"message":"166","line":65,"column":13,"nodeType":"164","messageId":"165","endLine":65,"endColumn":15},{"ruleId":"162","severity":1,"message":"166","line":95,"column":15,"nodeType":"164","messageId":"165","endLine":95,"endColumn":17},{"ruleId":"162","severity":1,"message":"166","line":95,"column":25,"nodeType":"164","messageId":"165","endLine":95,"endColumn":27},{"ruleId":"162","severity":1,"message":"166","line":112,"column":23,"nodeType":"164","messageId":"165","endLine":112,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":116,"column":23,"nodeType":"164","messageId":"165","endLine":116,"endColumn":25},{"ruleId":"162","severity":1,"message":"166","line":119,"column":48,"nodeType":"164","messageId":"165","endLine":119,"endColumn":50},{"ruleId":"162","severity":1,"message":"166","line":136,"column":93,"nodeType":"164","messageId":"165","endLine":136,"endColumn":95},{"ruleId":"162","severity":1,"message":"166","line":137,"column":135,"nodeType":"164","messageId":"165","endLine":137,"endColumn":137},{"ruleId":"162","severity":1,"message":"163","line":158,"column":25,"nodeType":"164","messageId":"165","endLine":158,"endColumn":27},{"ruleId":"162","severity":1,"message":"166","line":190,"column":64,"nodeType":"164","messageId":"165","endLine":190,"endColumn":66},{"ruleId":"162","severity":1,"message":"166","line":202,"column":40,"nodeType":"164","messageId":"165","endLine":202,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":214,"column":20,"nodeType":"164","messageId":"165","endLine":214,"endColumn":22},{"ruleId":"162","severity":1,"message":"166","line":214,"column":71,"nodeType":"164","messageId":"165","endLine":214,"endColumn":73},{"ruleId":"162","severity":1,"message":"163","line":418,"column":27,"nodeType":"164","messageId":"165","endLine":418,"endColumn":29},{"ruleId":"162","severity":1,"message":"166","line":419,"column":70,"nodeType":"164","messageId":"165","endLine":419,"endColumn":72},{"ruleId":"162","severity":1,"message":"163","line":434,"column":23,"nodeType":"164","messageId":"165","endLine":434,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":435,"column":47,"nodeType":"164","messageId":"165","endLine":435,"endColumn":49},{"ruleId":"162","severity":1,"message":"166","line":463,"column":33,"nodeType":"164","messageId":"165","endLine":463,"endColumn":35},{"ruleId":"158","severity":1,"message":"183","line":483,"column":7,"nodeType":"160","messageId":"161","endLine":483,"endColumn":17},{"ruleId":"158","severity":1,"message":"184","line":491,"column":7,"nodeType":"160","messageId":"161","endLine":491,"endColumn":12},{"ruleId":"162","severity":1,"message":"166","line":507,"column":74,"nodeType":"164","messageId":"165","endLine":507,"endColumn":76},{"ruleId":"162","severity":1,"message":"166","line":591,"column":25,"nodeType":"164","messageId":"165","endLine":591,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"166","line":5,"column":42,"nodeType":"164","messageId":"165","endLine":5,"endColumn":44},{"ruleId":"162","severity":1,"message":"166","line":5,"column":56,"nodeType":"164","messageId":"165","endLine":5,"endColumn":58},{"ruleId":"177","severity":1,"message":"178","line":18,"column":13,"nodeType":"179","endLine":18,"endColumn":201},{"ruleId":"162","severity":1,"message":"166","line":10,"column":31,"nodeType":"164","messageId":"165","endLine":10,"endColumn":33},{"ruleId":"162","severity":1,"message":"166","line":18,"column":31,"nodeType":"164","messageId":"165","endLine":18,"endColumn":33},{"ruleId":"162","severity":1,"message":"166","line":26,"column":31,"nodeType":"164","messageId":"165","endLine":26,"endColumn":33},{"ruleId":"158","severity":1,"message":"185","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":32,"column":35,"nodeType":"164","messageId":"165","endLine":32,"endColumn":37},{"ruleId":"162","severity":1,"message":"166","line":118,"column":64,"nodeType":"164","messageId":"165","endLine":118,"endColumn":66},{"ruleId":"162","severity":1,"message":"163","line":166,"column":64,"nodeType":"164","messageId":"165","endLine":166,"endColumn":66},{"ruleId":"177","severity":1,"message":"178","line":171,"column":21,"nodeType":"179","endLine":171,"endColumn":43},{"ruleId":"158","severity":1,"message":"186","line":22,"column":9,"nodeType":"160","messageId":"161","endLine":22,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"187","line":7,"column":9,"nodeType":"160","messageId":"161","endLine":7,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":11,"column":56,"nodeType":"164","messageId":"165","endLine":11,"endColumn":58},{"ruleId":"162","severity":1,"message":"163","line":20,"column":59,"nodeType":"164","messageId":"165","endLine":20,"endColumn":61},{"ruleId":"162","severity":1,"message":"163","line":21,"column":69,"nodeType":"164","messageId":"165","endLine":21,"endColumn":71},{"ruleId":"162","severity":1,"message":"166","line":31,"column":31,"nodeType":"164","messageId":"165","endLine":31,"endColumn":33},{"ruleId":"177","severity":1,"message":"178","line":37,"column":9,"nodeType":"179","endLine":37,"endColumn":85},{"ruleId":"177","severity":1,"message":"178","line":14,"column":9,"nodeType":"179","endLine":14,"endColumn":46},{"ruleId":"158","severity":1,"message":"188","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":10,"column":6,"nodeType":"191","endLine":10,"endColumn":12,"suggestions":"192"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-native-reassign",["193"],"no-negated-in-lhs",["194"],"'getIndividualCashBackData' is defined but never used.","'getTotals' is defined but never used.","'getOptions' is assigned a value but never used.","'weeklySpend' is assigned a value but never used.","'setWeeklySpend' is assigned a value but never used.","'LineItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Select' is defined but never used.","'makeAnimated' is defined but never used.","'values' is assigned a value but never used.","'categories' is assigned a value but never used.","'spend' is assigned a value but never used.","'useEffect' is defined but never used.","'labelStyles' is assigned a value but never used.","'names' is assigned a value but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'key' and 'name'. Either include them or remove the dependency array.","ArrayExpression",["195"],"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [data, key, name]",{"range":"198","text":"199"},[339,345],"[data, key, name]"]